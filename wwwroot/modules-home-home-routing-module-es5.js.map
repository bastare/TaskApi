{"version":3,"sources":["webpack:///src/modules/home/containers/home/home.component.html","webpack:///src/modules/project/components/create-project-dialog/createProjecrDialog.component.html","webpack:///src/modules/project/components/create-task-dialog/createTaskDialog.component.html","webpack:///src/modules/project/components/update-project-dialog/updateProjectDialog.component.html","webpack:///src/modules/project/components/update-task-dialog/updateTaskDialog.component.html","webpack:///src/modules/project/containers/project/project.component.html","webpack:///src/modules/home/components/index.ts","webpack:///src/modules/home/containers/home/home.component.css","webpack:///src/modules/home/containers/home/home.component.ts","webpack:///src/modules/home/containers/index.ts","webpack:///src/modules/home/guards/home.guard.ts","webpack:///src/modules/home/guards/index.ts","webpack:///src/modules/home/home-routing.module.ts","webpack:///src/modules/home/home.module.ts","webpack:///src/modules/home/services/data.resolve.ts","webpack:///src/modules/home/services/data.service.ts","webpack:///src/modules/home/services/index.ts","webpack:///src/modules/project/components/create-project-dialog/createProjecrDialog.component.css","webpack:///src/modules/project/components/create-project-dialog/createProjectDialog.component.ts","webpack:///src/modules/project/components/create-task-dialog/createTaskDialog.component.css","webpack:///src/modules/project/components/create-task-dialog/createTaskDialog.component.ts","webpack:///src/modules/project/components/index.ts","webpack:///src/modules/project/components/update-project-dialog/updateProjectDialog.component.css","webpack:///src/modules/project/components/update-project-dialog/updateProjectDialog.component.ts","webpack:///src/modules/project/components/update-task-dialog/updateTaskDialog.component.css","webpack:///src/modules/project/components/update-task-dialog/updateTaskDialog.component.ts","webpack:///src/modules/project/containers/index.ts","webpack:///src/modules/project/containers/project/project.component.css","webpack:///src/modules/project/containers/project/project.component.ts","webpack:///src/modules/project/guards/index.ts","webpack:///src/modules/project/guards/project.guard.ts","webpack:///src/modules/project/models/task.models.ts","webpack:///src/modules/project/project.module.ts","webpack:///src/modules/project/services/index.ts","webpack:///src/modules/project/services/pipe/status.pipe.ts","webpack:///src/modules/project/services/project-service/project.service.ts","webpack:///src/modules/project/services/task-service/task.service.ts"],"names":["components","HomeComponent","_auth","_dataService","_dialog","_projectService","_loaderServ","fetched","loaded","isLoading","config","animationType","doubleBounce","backdropBackgroundColour","backdropBorderRadius","primaryColour","secondaryColour","tertiaryColour","getData$","UserId","subscribe","res","userData","createProjectDialogRef","open","data","task","afterClosed","result","createProject$","error","alert","message","selector","template","containers","HomeGuard","next","state","providedIn","guards","ROUTES","path","canActivate","component","HomeRoutingModule","imports","forChild","exports","HomeModule","providers","declarations","DataResolve","route","DataService","_http","baseUrl","apiUrl","userId","id","get","responseType","services","CreateProjectDialogComponent","formBuilder","dialogRef","form","group","required","close","value","CreateTaskDialogComponent","deadline","priority","UpdateProjectDialogComponent","UpdateTaskDialogComponent","ProjectComponent","_taskService","displayedColumns","dataSource","forEach","x","Onway","status","Date","getTime","Expired","_setStatus","tasks","projectId","projectName","checkingTask","updateStatus$","console","transfer","updateTaskDialogRef","name","updateTask$","_updateTask","map","updateProjectDialogRef","updateProject$","createTaskDialogRef","createTask$","_addTaskToTable","tmpTask","push","event","prevIndex","findIndex","d","item","currentIndex","index","filteredData","length","updatePrioraty$","element","Done","filter","removeTask$","isDeleted","removeProject$","ms","sort","ProjectGuard","Status","ProjectModule","entryComponents","pipes","StatusPipe","ProjectService","put","post","TaskService","decodeToken","localStorage","getItem","nameid"],"mappings":"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","file":"modules-home-home-routing-module-es5.js","sourcesContent":["export default \"<div>\\n  <ngx-loading\\n    [show]=\\\"!this.userData\\\"\\n    [config]=\\\"{ fullScreenBackdrop: true }\\\"\\n  ></ngx-loading>\\n  <button\\n    *ngIf=\\\"this.userData\\\"\\n    id=\\\"exit\\\"\\n    (click)=\\\"_auth.logOut()\\\"\\n    mat-icon-button\\n    color=\\\"warn\\\"\\n  >\\n    <mat-icon>exit_to_app</mat-icon>\\n  </button>\\n\\n  <app-project *ngFor=\\\"let item of this.userData\\\" [data]=\\\"item\\\"></app-project>\\n\\n  <button\\n    *ngIf=\\\"this.userData\\\"\\n    id=\\\"add\\\"\\n    (click)=\\\"createProjectDialog()\\\"\\n    mat-fab\\n    color=\\\"primary\\\"\\n  >\\n    <mat-icon>add</mat-icon>\\n  </button>\\n  <div id=\\\"loader\\\">\\n    <ngx-loading [show]=\\\"loaded | async\\\" [config]=\\\"config\\\"></ngx-loading>\\n  </div>\\n</div>\\n\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Create project</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter project name\\\" />\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Create task</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter task\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput type=\\\"number\\\" formControlName=\\\"priority\\\" placeholder=\\\"Enter priority\\\" />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Choose a date</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"deadline\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Update project</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter project\\\" />\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Update</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Update task</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter task\\\" />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Choose a date</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"deadline\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Update</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<div *ngIf=\\\"!isDeleted\\\" class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"card-size card mb-3\\\">\\n      <div class=\\\"card-header\\\">\\n        {{ projectName }}\\n\\n        <button (click)=\\\"removeProject()\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon color=\\\"warn\\\">delete_outline</mat-icon>\\n        </button>\\n\\n        <button (click)=\\\"updateProjectDialog()\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon>create</mat-icon>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"card-header\\\">\\n        <button (click)=\\\"createTaskDialog()\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon>add_box</mat-icon>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"no-data\\\" *ngIf=\\\"!dataSource?.data?.length\\\"></div>\\n\\n        <table\\n          *ngIf=\\\"dataSource?.data?.length\\\"\\n          mat-table\\n          [dataSource]=\\\"dataSource\\\"\\n          matSort\\n          class=\\\"mat-elevation-z8\\\"\\n          cdkDropList\\n          [cdkDropListData]=\\\"dataSource\\\"\\n          (cdkDropListDropped)=\\\"dropTable($event)\\\"\\n        >\\n          <ng-container matColumnDef=\\\"state\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-header></th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              <button\\n                [disabled]=\\\"element.status == 0 ? true : false\\\"\\n                (click)=\\\"setDone(element)\\\"\\n                mat-icon-button\\n                color=\\\"primary\\\"\\n              >\\n                <mat-icon>check_circle_outline</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"priority\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Pr.</th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              cdkDragHandle\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              {{ element.priority }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              class=\\\"draw-border\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              {{ element.name }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"deadline\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Deadline</th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              <u> {{ element.deadline | date: 'dd:MM:yyyy' }}</u>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"status\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              {{ element.status | Status }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"update\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-header></th>\\n            <th mat-header-cell *matHeaderCellDef></th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              <button\\n                color=\\\"accent\\\"\\n                [disabled]=\\\"element.status == 0 ? true : false\\\"\\n                (click)=\\\"updateTaskDialog(element)\\\"\\n                mat-icon-button\\n                color=\\\"primary\\\"\\n              >\\n                <mat-icon>ballot</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"remove\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-header></th>\\n            <th mat-header-cell *matHeaderCellDef></th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              <button\\n                (click)=\\\"removeTask(element.id)\\\"\\n                color=\\\"accent\\\"\\n                [disabled]=\\\"element.status == 0 ? false : false\\\"\\n                (click)=\\\"(null)\\\"\\n                mat-icon-button\\n                color=\\\"primary\\\"\\n              >\\n                <mat-icon color=\\\"warn\\\">delete_outline</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr\\n            mat-row\\n            *matRowDef=\\\"let row; columns: displayedColumns\\\"\\n            cdkDrag\\n            [cdkDragData]=\\\"row\\\"\\n          ></tr>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","/** @format */\n\nexport const components = [];\n","export default \"/** @format */\\n\\n#exit {\\n  float: right;\\n\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 1rem;\\n  right: 1rem;\\n}\\n\\n#add {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 50px;\\n\\n  position: -webkit-sticky;\\n  position: sticky;\\n  bottom: 1rem;\\n  align-self: flex-end;\\n}\\n\\n#loader {\\n  position: fixed;\\n  bottom: 5%;\\n  right: 5%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL2hvbWUvY29udGFpbmVycy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhOztBQUViO0VBQ0UsWUFBWTs7RUFFWix3QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLFNBQVM7RUFDVCxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7O0VBRWhCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixVQUFVO0VBQ1YsU0FBUztBQUNYIiwiZmlsZSI6InNyYy9tb2R1bGVzL2hvbWUvY29udGFpbmVycy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAZm9ybWF0ICovXG5cbiNleGl0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xuXG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAxcmVtO1xuICByaWdodDogMXJlbTtcbn1cblxuI2FkZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuXG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgYm90dG9tOiAxcmVtO1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cblxuI2xvYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiA1JTtcbiAgcmlnaHQ6IDUlO1xufVxuIl19 */\";","/** @format */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/modules/auth/services';\nimport { DataService } from '../../services';\n\nimport {\n  NgxLoadingModule,\n  ngxLoadingAnimationTypes,\n  INgxLoadingConfig\n} from 'ngx-loading';\n\nimport { Project } from 'src/modules/project/models';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { CreateProjectDialogComponent } from '../../../project/components/create-project-dialog/createProjectDialog.component';\nimport { ProjectForCreate } from 'src/modules/project/models/task.models';\nimport { ProjectService } from 'src/modules/project/services';\nimport { LoaderService } from 'src/app/shared/services/loader.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  userData: Project[];\n  fetched = false;\n\n  createProjectDialogRef: MatDialogRef<\n    CreateProjectDialogComponent,\n    ProjectForCreate\n  >;\n\n  loaded = this._loaderServ.isLoading;\n\n  config: INgxLoadingConfig = {\n    animationType: ngxLoadingAnimationTypes.doubleBounce,\n    backdropBackgroundColour: 'rgba(0, 255, 0, 0)',\n    backdropBorderRadius: '8px',\n    primaryColour: '#1ea',\n    secondaryColour: '#f11',\n    tertiaryColour: '#1ee'\n  };\n\n  constructor(\n    public _auth: AuthService,\n    private _dataService: DataService,\n    private _dialog: MatDialog,\n    private _projectService: ProjectService,\n    private _loaderServ: LoaderService\n  ) {}\n\n  ngOnInit() {\n    this._dataService.getData$(this._auth.UserId).subscribe(res => {\n      this.userData = res as Project[];\n    });\n  }\n\n  createProjectDialog() {\n    this.createProjectDialogRef = this._dialog.open(\n      CreateProjectDialogComponent,\n      {\n        data: { task: '' }\n      }\n    );\n\n    this.createProjectDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this._projectService.createProject$(result.task).subscribe(\n          () => {\n            this._dataService.getData$(this._auth.UserId).subscribe(res => {\n              this.userData = res as Project[];\n            });\n          },\n          error => alert(error.message)\n        );\n      }\n    });\n  }\n}\n","import { HomeComponent } from './home/home.component';\n\nexport const containers = [HomeComponent];\n\nexport * from './home/home.component';\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n}\n","import { HomeGuard } from './home.guard';\n\nexport const guards = [HomeGuard];\n\nexport * from './home.guard';\n","/** @format */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeModule } from './home.module';\n\nimport * as homeContainers from './containers';\n\nimport * as homeGuards from './guards';\n\nimport { DataResolve } from './services/data.resolve';\nimport { TaskResolve } from '../project/services/task-service/task.resolve';\n\nexport const ROUTES: Routes = [\n  {\n    path: 'home',\n    canActivate: [],\n    component: homeContainers.HomeComponent\n    // resolve: {\n    //   dataResolver: DataResolve\n    // }\n  }\n];\n\n@NgModule({\n  imports: [HomeModule, RouterModule.forChild(ROUTES)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n","/** @format */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport * as authComponents from './components';\n\nimport * as authContainers from './containers';\n\nimport * as authGuards from './guards';\n\nimport * as authServices from './services';\nimport { ProjectModule } from '../project/project.module';\nimport { MaterialModule } from 'src/app/app.module';\nimport { NgxLoadingModule } from 'ngx-loading';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ProjectModule,\n    MaterialModule,\n    NgxLoadingModule\n  ],\n  providers: [...authServices.services, ...authGuards.guards],\n  declarations: [...authContainers.containers, ...authComponents.components],\n  exports: [...authContainers.containers, ...authComponents.components]\n})\nexport class HomeModule {}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { DataService } from '.';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { AuthService } from 'src/modules/auth/services';\n\n@Injectable()\nexport class DataResolve implements Resolve<any> {\n  constructor(private _dataService: DataService, private _auth: AuthService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    return this._dataService.getData$(this._auth.UserId);\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/modules/auth/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  baseUrl = environment.apiUrl + 'data';\n  userId: number;\n\n  constructor(private _http: HttpClient, private _auth: AuthService) {\n    this.userId = _auth.UserId;\n  }\n\n  getData$(id: number = this.userId) {\n    return this._http.get(`${this.baseUrl}/${id}/getData`, {\n      responseType: 'json'\n    });\n  }\n}\n","/** @format */\n\nimport { DataService } from './data.service';\nimport { DataResolve } from './data.resolve';\n\nexport const services = [DataService, DataResolve];\n\nexport * from './data.service';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvY3JlYXRlLXByb2plY3QtZGlhbG9nL2NyZWF0ZVByb2plY3JEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-createProjecrDialog',\n  templateUrl: './createProjecrDialog.component.html',\n  styleUrls: ['./createProjecrDialog.component.css']\n})\nexport class CreateProjectDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<CreateProjectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvY3JlYXRlLXRhc2stZGlhbG9nL2NyZWF0ZVRhc2tEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-createTaskDialog',\n  templateUrl: './createTaskDialog.component.html',\n  styleUrls: ['./createTaskDialog.component.css']\n})\nexport class CreateTaskDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<CreateTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: ['', Validators.required],\n      deadline: ['', Validators.required],\n      priority: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","/** @format */\n\nimport { UpdateTaskDialogComponent } from './update-task-dialog/updateTaskDialog.component';\nimport { CreateTaskDialogComponent } from './create-task-dialog/createTaskDialog.component';\nimport { UpdateProjectDialogComponent } from './update-project-dialog/updateProjectDialog.component';\nimport { CreateProjectDialogComponent } from './create-project-dialog/createProjectDialog.component';\n\nexport const components = [\n  UpdateTaskDialogComponent,\n  UpdateProjectDialogComponent,\n  CreateTaskDialogComponent,\n  CreateProjectDialogComponent\n];\n\nexport * from './update-task-dialog/updateTaskDialog.component';\nexport * from './create-task-dialog/createTaskDialog.component';\nexport * from './update-project-dialog/updateProjectDialog.component';\nexport * from './create-project-dialog/createProjectDialog.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvdXBkYXRlLXByb2plY3QtZGlhbG9nL3VwZGF0ZVByb2plY3REaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-updateProjectDialog',\n  templateUrl: './updateProjectDialog.component.html',\n  styleUrls: ['./updateProjectDialog.component.css']\n})\nexport class UpdateProjectDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateProjectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: [this.data.task, Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvdXBkYXRlLXRhc2stZGlhbG9nL3VwZGF0ZVRhc2tEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TaskForUpdate } from '../../models/task.models';\n\n@Component({\n  selector: 'app-updateTaskDialog',\n  templateUrl: './updateTaskDialog.component.html',\n  styleUrls: ['./updateTaskDialog.component.css']\n})\nexport class UpdateTaskDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: [this.data.task, Validators.required],\n      deadline: [this.data.deadline, Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","import { ProjectComponent } from './project/project.component';\n\nexport const containers = [ProjectComponent];\n\nexport * from './project/project.component';\n","export default \"/** @format */\\n\\n.container {\\n  align-items: flex-start;\\n}\\n\\n.no-data {\\n  background: url('no-data.jpeg') no-repeat center center;\\n  height: 500px;\\n  width: auto;\\n}\\n\\ncard-container {\\n  position: relative;\\n}\\n\\n.card-header button {\\n  float: right;\\n}\\n\\n#add {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 50px;\\n\\n  position: -webkit-sticky;\\n  position: sticky;\\n  bottom: 1rem;\\n  align-self: flex-end;\\n}\\n\\n/*  */\\n\\n.done {\\n  background: -webkit-linear-gradient(top, rgb(255, 255, 255) 1%, rgb(183, 230, 193) 99%);\\n}\\n\\n.expired {\\n  background: -webkit-linear-gradient(top, rgb(255, 255, 255) 1%, rgb(253, 0, 0) 99%);\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.card-size {\\n  width: 100%;\\n  margin-top: 50px;\\n}\\n\\ntd.mat-cell {\\n  padding: 20px 0;\\n  border: none;\\n}\\n\\n.mat-column-name {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 60% !important;\\n  width: 60% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n\\n  word-break: break-word;\\n\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\n.mat-column-position {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 7% !important;\\n  width: 7% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n\\n  word-break: break-word;\\n\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL3Byb2plY3QvY29udGFpbmVycy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhOztBQUViO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsdURBQXdFO0VBQ3hFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7O0VBRWhCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQSxLQUFLOztBQUVMO0VBQ0UsdUZBQXVGO0FBQ3pGOztBQUVBO0VBQ0UsbUZBQW1GO0FBQ3JGOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMsNkJBQTZCO0VBQzdCLHdCQUF3QjtFQUN4QixxQkFBcUI7RUFDckIseUJBQXlCO0VBQ3pCLHFCQUFxQjs7RUFFckIsc0JBQXNCOztFQUV0QixpQkFBaUI7RUFFakIscUJBQXFCO0VBQ3JCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdDQUFnQztFQUNoQyw2QkFBNkI7RUFDN0IsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtFQUNwQix5QkFBeUI7RUFDekIscUJBQXFCOztFQUVyQixzQkFBc0I7O0VBRXRCLGlCQUFpQjtFQUVqQixxQkFBcUI7RUFDckIsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9tb2R1bGVzL3Byb2plY3QvY29udGFpbmVycy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAZm9ybWF0ICovXG5cbi5jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLm5vLWRhdGEge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vLi4vLi4vYXNzZXRzL25vLWRhdGEuanBlZykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gIGhlaWdodDogNTAwcHg7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG5jYXJkLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmNhcmQtaGVhZGVyIGJ1dHRvbiB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuI2FkZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuXG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgYm90dG9tOiAxcmVtO1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cblxuLyogICovXG5cbi5kb25lIHtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCByZ2IoMjU1LCAyNTUsIDI1NSkgMSUsIHJnYigxODMsIDIzMCwgMTkzKSA5OSUpO1xufVxuXG4uZXhwaXJlZCB7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiKDI1NSwgMjU1LCAyNTUpIDElLCByZ2IoMjUzLCAwLCAwKSA5OSUpO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY2FyZC1zaXplIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG59XG5cbnRkLm1hdC1jZWxsIHtcbiAgcGFkZGluZzogMjBweCAwO1xuICBib3JkZXI6IG5vbmU7XG59XG5cbi5tYXQtY29sdW1uLW5hbWUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA2MCUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG5cbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcblxuICAtbXMtaHlwaGVuczogYXV0bztcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xuICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XG4gIGh5cGhlbnM6IGF1dG87XG59XG5cbi5tYXQtY29sdW1uLXBvc2l0aW9uIHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiB1bnNldCAhaW1wb3J0YW50O1xuICBmbGV4OiAwIDAgNyUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDclICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcblxuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuXG4gIC1tcy1oeXBoZW5zOiBhdXRvO1xuICAtbW96LWh5cGhlbnM6IGF1dG87XG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcbiAgaHlwaGVuczogYXV0bztcbn1cbiJdfQ== */\";","/** @format */\n\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  Input,\n  ChangeDetectorRef,\n  DoCheck,\n  OnChanges\n} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UpdateTaskDialogComponent } from '../../components/update-task-dialog/updateTaskDialog.component';\nimport {\n  TaskForUpdate,\n  Status,\n  Task,\n  TaskForCreate,\n  ProjectForUpdate\n} from '../../models/task.models';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Project } from '../../models';\nimport { TaskService, ProjectService } from '../../services';\nimport { DataService } from 'src/modules/home/services';\nimport {\n  CreateTaskDialogComponent,\n  UpdateProjectDialogComponent\n} from '../../components';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit, DoCheck {\n  //#region prop\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  @ViewChild(MatSort) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.dataSource.sort = this.sort;\n  }\n\n  @Input() data: Project;\n\n  displayedColumns: string[] = [\n    'state',\n    'priority',\n    'name',\n    'deadline',\n    'status',\n    'update',\n    'remove'\n  ];\n  dataSource: MatTableDataSource<Task>;\n\n  updateTaskDialogRef: MatDialogRef<UpdateTaskDialogComponent, TaskForUpdate>;\n  createTaskDialogRef: MatDialogRef<CreateTaskDialogComponent, TaskForCreate>;\n  updateProjectDialogRef: MatDialogRef<\n    UpdateProjectDialogComponent,\n    ProjectForUpdate\n  >;\n\n  projectId: number;\n  projectName: string;\n\n  isDeleted: boolean;\n  isFetched: boolean;\n  //#endregion\n\n  constructor(\n    private _dialog: MatDialog,\n    private _taskService: TaskService,\n    private _projectService: ProjectService\n  ) {}\n\n  ngDoCheck(): void {\n    this.dataSource.data.forEach(x => {\n      if (\n        Status.Onway === x.status &&\n        new Date(x.deadline).getTime() < new Date().getTime()\n      ) {\n        x.status = Status.Expired;\n      } else if (\n        Status.Expired === x.status &&\n        new Date(x.deadline).getTime() > new Date().getTime()\n      ) {\n        x.status = Status.Onway;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this._setStatus(this.data.tasks);\n\n    this.dataSource = new MatTableDataSource(this.data.tasks);\n\n    this.projectId = this.data.projectId;\n    this.projectName = this.data.projectName;\n  }\n\n  private _setStatus(tasks: Task[]): void {\n    tasks.forEach(checkingTask => {\n      if (\n        new Date(checkingTask.deadline).getTime() < new Date().getTime() &&\n        checkingTask.status === Status.Onway\n      ) {\n        this._taskService\n          .updateStatus$(checkingTask.id, Status.Expired)\n          .subscribe(\n            () => {},\n            error => console.error(error.message)\n          );\n\n        checkingTask.status = Status.Expired;\n      } else if (\n        new Date(checkingTask.deadline).getTime() > new Date().getTime() &&\n        checkingTask.status === Status.Expired\n      ) {\n        this._taskService\n          .updateStatus$(checkingTask.id, Status.Onway)\n          .subscribe(\n            () => {},\n            error => console.error(error.message)\n          );\n      }\n    });\n  }\n\n  updateTaskDialog(transfer: Task) {\n    this.updateTaskDialogRef = this._dialog.open(UpdateTaskDialogComponent, {\n      data: {\n        task: transfer.name,\n        deadline: transfer.deadline\n      }\n    });\n\n    this.updateTaskDialogRef.afterClosed().subscribe(result => {\n      if (transfer) {\n        this._taskService\n          .updateTask$(transfer.id, result.task, result.deadline)\n          .subscribe(\n            task => {\n              this._updateTask(task as Task);\n            },\n            error => console.error(error.message)\n          );\n      }\n    });\n  }\n\n  private _updateTask(task: Task) {\n    this.dataSource.data = this.dataSource.data.map(x =>\n      x.id === task.id ? task : x\n    );\n  }\n\n  updateProjectDialog() {\n    this.updateProjectDialogRef = this._dialog.open(\n      UpdateProjectDialogComponent,\n      {\n        data: { task: this.projectName }\n      }\n    );\n\n    this.updateProjectDialogRef.afterClosed().subscribe(result => {\n      this._projectService\n        .updateProject$(this.projectId, result.task)\n        .subscribe(\n          () => {\n            this.projectName = result.task;\n          },\n          error => console.error(error.message)\n        );\n    });\n  }\n\n  createTaskDialog() {\n    this.createTaskDialogRef = this._dialog.open(CreateTaskDialogComponent, {\n      data: { task: '', deadline: '', priority: '' }\n    });\n\n    this.createTaskDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this._taskService\n          .createTask$(\n            this.projectId,\n            result.task,\n            result.deadline,\n            result.priority\n          )\n          .subscribe(\n            task => {\n              this._addTaskToTable(task as Task);\n            },\n            error => console.error(error.message)\n          );\n      }\n    });\n  }\n\n  private _addTaskToTable(task: Task) {\n    const tmpTask = [...this.dataSource.data];\n    tmpTask.push(task);\n\n    this.dataSource.data = tmpTask;\n  }\n\n  dropTable(event: CdkDragDrop<Task[]>) {\n    const prevIndex = this.dataSource.data.findIndex(\n      d => d === event.item.data\n    );\n\n    moveItemInArray(this.dataSource.data, prevIndex, event.currentIndex);\n\n    for (let index = 0; index < this.dataSource.filteredData.length; index++)\n      this.dataSource.data[index].priority = index;\n\n    this.dataSource.data = this.dataSource.data;\n\n    this._taskService.updatePrioraty$(this.dataSource.data).subscribe(\n      () => {},\n      error => console.error(error.message)\n    );\n  }\n\n  setDone(element: Task) {\n    this._taskService.updateStatus$(element.id, Status.Done).subscribe(\n      () => {},\n      error => console.error(error.message)\n    );\n\n    element.status = Status.Done;\n  }\n\n  removeTask(id: number) {\n    this.dataSource.data = this.dataSource.data.filter(x => x.id !== id);\n\n    this._taskService.removeTask$(id).subscribe(\n      () => {},\n      error => console.error(error.message)\n    );\n  }\n\n  removeProject() {\n    this.isDeleted = true;\n\n    this._projectService.removeProject$(this.projectId).subscribe(\n      () => {},\n      error => console.error(error.message)\n    );\n  }\n}\n","import { ProjectGuard } from './project.guard';\n\nexport const guards = [ProjectGuard];\n\nexport * from './project.guard';\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","/** @format */\n\nexport type Task = {\n  id: number;\n  name: string;\n  deadline: string | Date;\n  status: Status;\n  priority: number;\n};\n\nexport type ProjectForCreate = {\n  task: string;\n};\n\nexport type ProjectForUpdate = {\n  task: string;\n};\n\nexport type TaskForCreate = {\n  task: string;\n  deadline: Date;\n  priority: number;\n};\n\nexport type TaskForUpdate = {\n  task: string;\n  deadline: Date;\n};\n\nexport enum Status {\n  Done,\n  Expired,\n  Onway\n}\n","/**\n * /* tslint:disable: ordered-imports\n *\n * @format\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport * as projectComponents from './components';\n\nimport * as projectContainers from './containers';\n\nimport * as projectGuards from './guards';\n\nimport * as projectServices from './services';\n\nimport { MaterialModule } from 'src/app/app.module';\nimport { NgxLoadingComponent, NgxLoadingModule } from 'ngx-loading';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MaterialModule,\n    NgxLoadingModule\n  ],\n  providers: [\n    ...projectServices.pipes,\n    ...projectServices.services,\n    ...projectGuards.guards\n  ],\n  declarations: [\n    ...projectContainers.containers,\n    ...projectComponents.components,\n    ...projectServices.pipes\n  ],\n  exports: [...projectContainers.containers, ...projectComponents.components],\n  entryComponents: [...projectComponents.components]\n})\nexport class ProjectModule {}\n","/** @format */\n\nimport { StatusPipe } from './pipe/status.pipe';\nimport { ProjectService } from './project-service/project.service';\nimport { TaskService } from './task-service/task.service';\n\nexport const pipes = [StatusPipe];\n\nexport const services = [ProjectService, TaskService];\n\nexport * from './pipe/status.pipe';\nexport * from './project-service/project.service';\nexport * from './task-service/task.service';\n// export * from './task.resolve';\n","/** @format */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '../../models/task.models';\n\n@Pipe({\n  name: 'Status'\n})\nexport class StatusPipe implements PipeTransform {\n  transform(value: any, ...args: any[]): any {\n    const result = Status[value as Status];\n    return result;\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/modules/auth/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  baseUrl = environment.apiUrl + 'project';\n\n  constructor(private _http: HttpClient, private _auth: AuthService) {}\n\n  removeProject$(id: number) {\n    return this._http.delete(\n      `${this.baseUrl}/${this._auth.UserId}/remove/${id}`,\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateProject$(id: number, name: string) {\n    return this._http.put(\n      `${this.baseUrl}/${this._auth.UserId}/update`,\n      { id, name },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  createProject$(name: string) {\n    return this._http.post(\n      `${this.baseUrl}/${this._auth.UserId}/create`,\n      { name },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\nimport { Task, Status } from '../../models/task.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  baseUrl = environment.apiUrl + 'task';\n\n  userId: any;\n\n  constructor(private _http: HttpClient) {\n    this.userId = new JwtHelperService().decodeToken(\n      localStorage.getItem('token')\n    ).nameid;\n  }\n\n  getTask$(id: number) {\n    return this._http.get(`${this.baseUrl}/${this.userId}/get/${id}`, {\n      responseType: 'json'\n    });\n  }\n\n  createTask$(\n    projectId: number,\n    name: string,\n    deadline: Date,\n    priority: number\n  ) {\n    return this._http.post(\n      `${this.baseUrl}/${this.userId}/create/${projectId}`,\n      { name, deadline, priority },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateTask$(id: number, name: string, deadline: Date) {\n    return this._http.put(\n      `${this.baseUrl}/${this.userId}/update`,\n      { id, name, deadline },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateStatus$(id: number, status: Status) {\n    return this._http.put(\n      `${this.baseUrl}/${this.userId}/updateStatus`,\n      { id, status },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updatePrioraty$(tasks: Task[]) {\n    return this._http.put(\n      `${this.baseUrl}/${this.userId}/updatePrioraty`,\n      { tasks },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  removeTask$(id) {\n    return this._http.delete(`${this.baseUrl}/${this.userId}/remove/${id}`, {\n      responseType: 'json'\n    });\n  }\n}\n"]}