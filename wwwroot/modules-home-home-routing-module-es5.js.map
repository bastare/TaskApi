{"version":3,"sources":["webpack:///src/modules/home/containers/home/home.component.html","webpack:///src/modules/project/components/create-project-dialog/createProjecrDialog.component.html","webpack:///src/modules/project/components/create-task-dialog/createTaskDialog.component.html","webpack:///src/modules/project/components/update-project-dialog/updateProjectDialog.component.html","webpack:///src/modules/project/components/update-task-dialog/updateTaskDialog.component.html","webpack:///src/modules/project/containers/project/project.component.html","webpack:///src/modules/home/components/index.ts","webpack:///src/modules/home/containers/home/home.component.css","webpack:///src/modules/home/containers/home/home.component.ts","webpack:///src/modules/home/containers/index.ts","webpack:///src/modules/home/guards/home.guard.ts","webpack:///src/modules/home/guards/index.ts","webpack:///src/modules/home/home-routing.module.ts","webpack:///src/modules/home/home.module.ts","webpack:///src/modules/home/services/data.resolve.ts","webpack:///src/modules/home/services/data.service.ts","webpack:///src/modules/home/services/index.ts","webpack:///src/modules/project/components/create-project-dialog/createProjecrDialog.component.css","webpack:///src/modules/project/components/create-project-dialog/createProjectDialog.component.ts","webpack:///src/modules/project/components/create-task-dialog/createTaskDialog.component.css","webpack:///src/modules/project/components/create-task-dialog/createTaskDialog.component.ts","webpack:///src/modules/project/components/index.ts","webpack:///src/modules/project/components/update-project-dialog/updateProjectDialog.component.css","webpack:///src/modules/project/components/update-project-dialog/updateProjectDialog.component.ts","webpack:///src/modules/project/components/update-task-dialog/updateTaskDialog.component.css","webpack:///src/modules/project/components/update-task-dialog/updateTaskDialog.component.ts","webpack:///src/modules/project/containers/index.ts","webpack:///src/modules/project/containers/project/project.component.css","webpack:///src/modules/project/containers/project/project.component.ts","webpack:///src/modules/project/guards/index.ts","webpack:///src/modules/project/guards/project.guard.ts","webpack:///src/modules/project/models/task.models.ts","webpack:///src/modules/project/project.module.ts","webpack:///src/modules/project/services/index.ts","webpack:///src/modules/project/services/pipe/status.pipe.ts","webpack:///src/modules/project/services/project-service/project.service.ts","webpack:///src/modules/project/services/task-service/task.service.ts"],"names":["components","HomeComponent","auth","dataService","dialog","projectService","getData$","UserId","subscribe","res","userData","createProjectDialogRef","open","data","task","afterClosed","result","createProject$","error","alert","message","selector","template","containers","HomeGuard","next","state","providedIn","guards","ROUTES","path","canActivate","component","HomeRoutingModule","imports","forChild","exports","HomeModule","providers","declarations","DataResolve","route","DataService","http","baseUrl","apiUrl","userId","id","get","responseType","services","CreateProjectDialogComponent","formBuilder","dialogRef","form","group","required","close","value","CreateTaskDialogComponent","deadline","priority","UpdateProjectDialogComponent","UpdateTaskDialogComponent","ProjectComponent","taskService","displayedColumns","dataSource","length","checkingTask","Date","getTime","status","Onway","updateStatus$","Expired","_updateTableData","console","tasks","sort","projectId","projectName","transfer","updateTaskDialogRef","name","updateTask$","updateProjectDialogRef","updateProject$","createTaskDialogRef","val","createTask$","event","prevIndex","findIndex","d","item","currentIndex","index","filteredData","updatePrioraty$","element","Done","removeTask$","removeProject$","deleted","find","x","ProjectGuard","Status","ProjectModule","entryComponents","pipes","StatusPipe","ProjectService","put","post","TaskService","decodeToken","localStorage","getItem","nameid"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAEO,QAAMA,UAAU,GAAG,EAAnB;;;;;;;;;;;;;;;;ACFP;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAiBA,QAAaC,aAAa;AAKxB,6BACSC,IADT,EAEUC,WAFV,EAGUC,MAHV,EAIUC,cAJV,EAIwC;AAAA;;AAH/B,aAAAH,IAAA,GAAAA,IAAA;AACC,aAAAC,WAAA,GAAAA,WAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACN;;AAVoB;AAAA;AAAA,mCAYb;AAAA;;AACT,eAAKF,WAAL,CAAiBG,QAAjB,CAA0B,KAAKJ,IAAL,CAAUK,MAApC,EAA4CC,SAA5C,CAAsD,UAAAC,GAAG,EAAI;AAC3D,iBAAI,CAACC,QAAL,GAAgBD,GAAhB;AACD,WAFD;AAGD;AAhBuB;AAAA;AAAA,8CAkBF;AAAA;;AACpB,eAAKE,sBAAL,GAA8B,KAAKP,MAAL,CAAYQ,IAAZ,CAAiB,oIAAjB,EAA+C;AAC3EC,gBAAI,EAAE;AAAEC,kBAAI,EAAE;AAAR;AADqE,WAA/C,CAA9B;AAIA,eAAKH,sBAAL,CAA4BI,WAA5B,GAA0CP,SAA1C,CAAoD,UAAAQ,MAAM,EAAI;AAC5D,gBAAIA,MAAJ,EAAY;AACV,oBAAI,CAACX,cAAL,CAAoBY,cAApB,CAAmCD,MAAM,CAACF,IAA1C,EAAgDN,SAAhD,CACE,YAAM;AACJ,sBAAI,CAACL,WAAL,CAAiBG,QAAjB,CAA0B,MAAI,CAACJ,IAAL,CAAUK,MAApC,EAA4CC,SAA5C,CAAsD,UAAAC,GAAG,EAAI;AAC3D,wBAAI,CAACC,QAAL,GAAgBD,GAAhB;AACD,iBAFD;AAGD,eALH,EAME,UAAAS,KAAK;AAAA,uBAAIC,KAAK,CAACD,KAAK,CAACE,OAAP,CAAT;AAAA,eANP;AAQD;AACF,WAXD;AAYD;AAnCuB;;AAAA;AAAA,OAA1B;;;;cAMiB;;cACQ;;cACL;;cACQ;;;;AATfnB,iBAAa,6DALzB,gEAAU;AACToB,cAAQ,EAAE,UADD;AAETC,cAAQ,EAAR;AAAA;AAAA,iHAFS;;;;AAAA,KAAV,CAKyB,GAAbrB,aAAa,CAAb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfN,QAAMsB,UAAU,GAAG,CAAC,kEAAD,CAAnB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUP,QAAaC,SAAS;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAElBC,IAFkB,EAGlBC,KAHkB,EAGQ;AAE1B,iBAAO,IAAP;AACD;AANmB;;AAAA;AAAA,OAAtB;;AAAaF,aAAS,6DAHrB,iEAAW;AACVG,gBAAU,EAAE;AADF,KAAX,CAGqB,GAATH,SAAS,CAAT;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVN,QAAMI,MAAM,GAAG,CAAC,qDAAD,CAAf;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAcO,QAAMC,MAAM,GAAW,CAC5B;AACEC,UAAI,EAAE,MADR;AAEEC,iBAAW,EAAE,EAFf;AAGEC,eAAS,EAAE,yDAHb,CAIE;AACA;AACA;;AANF,KAD4B,CAAvB;;AAeP,QAAaC,iBAAiB;AAAA;AAAA,KAA9B;;AAAaA,qBAAiB,6DAJ7B,+DAAS;AACRC,aAAO,EAAE,CAAC,uDAAD,EAAa,6DAAaC,QAAb,CAAsBN,MAAtB,CAAb,CADD;AAERO,aAAO,EAAE,CAAC,4DAAD;AAFD,KAAT,CAI6B,GAAjBH,iBAAiB,CAAjB;;;;;;;;;;;;;;;;AC7Bb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AA8BA,QAAaI,UAAU;AAAA;AAAA,KAAvB;;AAAaA,cAAU,6DAbtB,+DAAS;AACRH,aAAO,EAAE,CACP,4DADO,EAEP,4DAFO,EAGP,kEAHO,EAIP,0DAJO,EAKP,qEALO,EAMP,kEANO,CADD;AASRI,eAAS,+BAAM,kDAAN,sBAAgC,8CAAhC,EATD;AAURC,kBAAY,+BAAM,sDAAN,sBAAoC,sDAApC,EAVJ;AAWRH,aAAO,+BAAM,sDAAN,sBAAoC,sDAApC;AAXC,KAAT,CAasB,GAAVC,UAAU,CAAV;;;;;;;;;;;;;;;;AC9Bb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AASA,QAAaG,WAAW;AACtB,2BAAoBrC,WAApB,EAAsDD,IAAtD,EAAyE;AAAA;;AAArD,aAAAC,WAAA,GAAAA,WAAA;AAAkC,aAAAD,IAAA,GAAAA,IAAA;AAAqB;;AADrD;AAAA;AAAA,gCAGduC,KAHc,EAGe;AACnC,iBAAO,KAAKtC,WAAL,CAAiBG,QAAjB,CAA0B,KAAKJ,IAAL,CAAUK,MAApC,CAAP;AACD;AALqB;;AAAA;AAAA,OAAxB;;;;cACmC;;cAA2B;;;;AADjDiC,eAAW,6DADvB,kEACuB,GAAXA,WAAW,CAAX;;;;;;;;;;;;;;;;ACTb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAYA,QAAaE,WAAW;AAItB,2BAAoBC,IAApB,EAA8CzC,IAA9C,EAAiE;AAAA;;AAA7C,aAAAyC,IAAA,GAAAA,IAAA;AAA0B,aAAAzC,IAAA,GAAAA,IAAA;AAH9C,aAAA0C,OAAA,GAAU,yEAAYC,MAAZ,GAAqB,MAA/B;AAIE,aAAKC,MAAL,GAAc5C,IAAI,CAACK,MAAnB;AACD;;AANqB;AAAA;AAAA,mCAQa;AAAA,cAA1BwC,EAA0B,uEAAb,KAAKD,MAAQ;AACjC,iBAAO,KAAKH,IAAL,CAAUK,GAAV,WAAiB,KAAKJ,OAAtB,cAAiCG,EAAjC,eAA+C;AAAEE,wBAAY,EAAE;AAAhB,WAA/C,CAAP;AACD;AAVqB;;AAAA;AAAA,OAAxB;;;;cAI4B;;cAA0B;;;;AAJzCP,eAAW,6DAHvB,iEAAW;AACVf,gBAAU,EAAE;AADF,KAAX,CAGuB,GAAXe,WAAW,CAAX;;;;;;;;;;;;;;;;ACZb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAKO,QAAMQ,QAAQ,GAAG,CAAC,yDAAD,EAAc,yDAAd,CAAjB;;;;;;;;;;;;;;;;ACLP;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAWA,QAAaC,4BAA4B;AAGvC,4CACUC,WADV,EAEUC,SAFV,EAGkCxC,IAHlC,EAGsC;AAAA;;AAF5B,aAAAuC,WAAA,GAAAA,WAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACwB,aAAAxC,IAAA,GAAAA,IAAA;AAC9B;;AAPmC;AAAA;AAAA,mCAS5B;AACT,eAAKyC,IAAL,GAAY,KAAKF,WAAL,CAAiBG,KAAjB,CAAuB;AACjCzC,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0C,QAAhB;AAD2B,WAAvB,CAAZ;AAGD;AAbsC;AAAA;AAAA,+BAehCF,IAfgC,EAe1B;AACX,eAAKD,SAAL,CAAeI,KAAf,CAAqBH,IAAI,CAACI,KAA1B;AACD;AAjBsC;;AAAA;AAAA,OAAzC;;;;cAIyB;;cACF;;;;gBAClB,oD;AAAM,iBAAC,wEAAD;;;;;AANEP,gCAA4B,6DALxC,gEAAU;AACT9B,cAAQ,EAAE,yBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,oJAFS;;;;AAAA,KAAV,CAKwC,EAMpC,sHAAO,wEAAP,EANoC,GAA5B6B,4BAA4B,CAA5B;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAWA,QAAaQ,yBAAyB;AAGpC,yCACUP,WADV,EAEUC,SAFV,EAGkCxC,IAHlC,EAGsC;AAAA;;AAF5B,aAAAuC,WAAA,GAAAA,WAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACwB,aAAAxC,IAAA,GAAAA,IAAA;AAC9B;;AAPgC;AAAA;AAAA,mCASzB;AACT,eAAKyC,IAAL,GAAY,KAAKF,WAAL,CAAiBG,KAAjB,CAAuB;AACjCzC,gBAAI,EAAE,CAAC,EAAD,EAAK,0DAAW0C,QAAhB,CAD2B;AAEjCI,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWJ,QAAhB,CAFuB;AAGjCK,oBAAQ,EAAE,CAAC,EAAD,EAAK,0DAAWL,QAAhB;AAHuB,WAAvB,CAAZ;AAKD;AAfmC;AAAA;AAAA,+BAiB7BF,IAjB6B,EAiBvB;AACX,eAAKD,SAAL,CAAeI,KAAf,CAAqBH,IAAI,CAACI,KAA1B;AACD;AAnBmC;;AAAA;AAAA,OAAtC;;;;cAIyB;;cACF;;;;gBAClB,oD;AAAM,iBAAC,wEAAD;;;;;AANEC,6BAAyB,6DALrC,gEAAU;AACTtC,cAAQ,EAAE,sBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8IAFS;;;;AAAA,KAAV,CAKqC,EAMjC,sHAAO,wEAAP,EANiC,GAAzBqC,yBAAyB,CAAzB;;;;;;;;;;;;;;;;ACXb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAOO,QAAM3D,UAAU,GAAG,CACxB,wGADwB,EAExB,iHAFwB,EAGxB,wGAHwB,EAIxB,iHAJwB,CAAnB;;;;;;;;;;;;;;;;ACPP;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAWA,QAAa8D,4BAA4B;AAGvC,4CACUV,WADV,EAEUC,SAFV,EAGkCxC,IAHlC,EAGsC;AAAA;;AAF5B,aAAAuC,WAAA,GAAAA,WAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACwB,aAAAxC,IAAA,GAAAA,IAAA;AAC9B;;AAPmC;AAAA;AAAA,mCAS5B;AACT,eAAKyC,IAAL,GAAY,KAAKF,WAAL,CAAiBG,KAAjB,CAAuB;AACjCzC,gBAAI,EAAE,CAAC,KAAKD,IAAL,CAAUC,IAAX,EAAiB,0DAAW0C,QAA5B;AAD2B,WAAvB,CAAZ;AAGD;AAbsC;AAAA;AAAA,+BAehCF,IAfgC,EAe1B;AACX,eAAKD,SAAL,CAAeI,KAAf,CAAqBH,IAAI,CAACI,KAA1B;AACD;AAjBsC;;AAAA;AAAA,OAAzC;;;;cAIyB;;cACF;;;;gBAClB,oD;AAAM,iBAAC,wEAAD;;;;;AANEI,gCAA4B,6DALxC,gEAAU;AACTzC,cAAQ,EAAE,yBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,oJAFS;;;;AAAA,KAAV,CAKwC,EAMpC,sHAAO,wEAAP,EANoC,GAA5BwC,4BAA4B,CAA5B;;;;;;;;;;;;;;;;ACXb;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAYA,QAAaC,yBAAyB;AAGpC,yCACUX,WADV,EAEUC,SAFV,EAGkCxC,IAHlC,EAGsC;AAAA;;AAF5B,aAAAuC,WAAA,GAAAA,WAAA;AACA,aAAAC,SAAA,GAAAA,SAAA;AACwB,aAAAxC,IAAA,GAAAA,IAAA;AAC9B;;AAPgC;AAAA;AAAA,mCASzB;AACT,eAAKyC,IAAL,GAAY,KAAKF,WAAL,CAAiBG,KAAjB,CAAuB;AACjCzC,gBAAI,EAAE,CAAC,KAAKD,IAAL,CAAUC,IAAX,EAAiB,0DAAW0C,QAA5B,CAD2B;AAEjCI,oBAAQ,EAAE,CAAC,KAAK/C,IAAL,CAAU+C,QAAX,EAAqB,0DAAWJ,QAAhC;AAFuB,WAAvB,CAAZ;AAID;AAdmC;AAAA;AAAA,+BAgB7BF,IAhB6B,EAgBvB;AACX,eAAKD,SAAL,CAAeI,KAAf,CAAqBH,IAAI,CAACI,KAA1B;AACD;AAlBmC;;AAAA;AAAA,OAAtC;;;;cAIyB;;cACF;;;;gBAClB,oD;AAAM,iBAAC,wEAAD;;;;;AANEK,6BAAyB,6DALrC,gEAAU;AACT1C,cAAQ,EAAE,sBADD;AAETC,cAAQ,EAAR;AAAA;AAAA,8IAFS;;;;AAAA,KAAV,CAKqC,EAMjC,sHAAO,wEAAP,EANiC,GAAzByC,yBAAyB,CAAzB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVN,QAAMxC,UAAU,GAAG,CAAC,2EAAD,CAAnB;;;;;;;;;;;;;;;;ACFP;AAAe;;;AAAA;;;;;;;;;;;;;;;;ACAf;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAuCA,QAAayC,gBAAgB;AA0B3B;AAEA,gCACU5D,MADV,EAEU6D,WAFV,EAGU5D,cAHV,EAIUF,WAJV,EAIkC;AAAA;;AAHxB,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAA6D,WAAA,GAAAA,WAAA;AACA,aAAA5D,cAAA,GAAAA,cAAA;AACA,aAAAF,WAAA,GAAAA,WAAA;AA1BV,aAAA+D,gBAAA,GAA6B,CAC3B,OAD2B,EAE3B,UAF2B,EAG3B,MAH2B,EAI3B,UAJ2B,EAK3B,QAL2B,EAM3B,QAN2B,EAO3B,QAP2B,CAA7B;AA2BI;;AAjCuB;AAAA;AAAA,oCAmClB;AAAA;;;;AACP,cAAI,CAAJ,WAAI,KAAKC,UAAT,MAAmB,IAAnB,IAAmB,aAAnB,GAAmB,MAAnB,GAAmB,GAAEtD,IAAjB,MAAqB,IAArB,IAAqB,aAArB,GAAqB,MAArB,GAAqB,GAAEuD,MAA3B,EAAmC;AAAA,uDACV,KAAKD,UAAL,CAAgBtD,IADN;AAAA,gBAC1BwD,YAD0B;;AAEjC,gBACE,IAAIC,IAAJ,CAASD,YAAY,CAACT,QAAtB,EAAgCW,OAAhC,KAA4C,IAAID,IAAJ,GAAWC,OAAX,EAA5C,IACAF,YAAY,CAACG,MAAb,KAAwB,2DAAOC,KAFjC,EAIE,KAAKR,WAAL,CAAiBS,aAAjB,CAA+BL,YAAY,CAACtB,EAA5C,EAAgD,2DAAO4B,OAAvD,EAAgEnE,SAAhE,CACE;AAAA,qBAAM,MAAI,CAACoE,gBAAL,EAAN;AAAA,aADF,EAEE,UAAA1D,KAAK;AAAA,qBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,aAFP;AAIH;AACF;AA/C0B;AAAA;AAAA,mCAiDhB;AACT,eAAK+C,UAAL,GAAkB,IAAI,0EAAJ,CAAuB,KAAKtD,IAAL,CAAUiE,KAAjC,CAAlB;AACA,eAAKX,UAAL,CAAgBY,IAAhB,GAAuB,KAAKA,IAA5B;AAEA,eAAKC,SAAL,GAAiB,KAAKnE,IAAL,CAAUmE,SAA3B;AACA,eAAKC,WAAL,GAAmB,KAAKpE,IAAL,CAAUoE,WAA7B;AACD;AAvD0B;AAAA;AAAA,yCAyDVC,QAzDU,EAyDM;AAAA;;AAC/B,eAAKC,mBAAL,GAA2B,KAAK/E,MAAL,CAAYQ,IAAZ,CAAiB,mHAAjB,EAA4C;AACrEC,gBAAI,EAAE;AAAEC,kBAAI,EAAEoE,QAAQ,CAACE,IAAjB;AAAuBxB,sBAAQ,EAAEsB,QAAQ,CAACtB;AAA1C;AAD+D,WAA5C,CAA3B;AAIA,eAAKuB,mBAAL,CAAyBpE,WAAzB,GAAuCP,SAAvC,CAAiD,UAAAQ,MAAM,EAAI;AACzD,gBAAIkE,QAAJ,EAAc;AACZ,oBAAI,CAACjB,WAAL,CAAiBoB,WAAjB,CAA6BH,QAAQ,CAACnC,EAAtC,EAA0C/B,MAAM,CAACF,IAAjD,EAAuDE,MAAM,CAAC4C,QAA9D,EAAwEpD,SAAxE,CACE,YAAM;AACJ,sBAAI,CAACoE,gBAAL;AACD,eAHH,EAIE,UAAA1D,KAAK;AAAA,uBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,eAJP;AAMD;AACF,WATD;AAUD;AAxE0B;AAAA;AAAA,8CA0EL;AAAA;;AACpB,eAAKkE,sBAAL,GAA8B,KAAKlF,MAAL,CAAYQ,IAAZ,CAAiB,yEAAjB,EAA+C;AAC3EC,gBAAI,EAAE;AAAEC,kBAAI,EAAE,KAAKmE;AAAb;AADqE,WAA/C,CAA9B;AAIA,eAAKK,sBAAL,CAA4BvE,WAA5B,GAA0CP,SAA1C,CAAoD,UAAAQ,MAAM,EAAI;AAC5D,kBAAI,CAACX,cAAL,CAAoBkF,cAApB,CAAmC,MAAI,CAACP,SAAxC,EAAmDhE,MAAM,CAACF,IAA1D,EAAgEN,SAAhE,CACE,YAAM;AACJ,oBAAI,CAACyE,WAAL,GAAmBjE,MAAM,CAACF,IAA1B;AACD,aAHH,EAIE,UAAAI,KAAK;AAAA,qBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,aAJP;AAMD,WAPD;AAQD;AAvF0B;AAAA;AAAA,2CAyFR;AAAA;;AACjB,eAAKoE,mBAAL,GAA2B,KAAKpF,MAAL,CAAYQ,IAAZ,CAAiB,sEAAjB,EAA4C;AACrEC,gBAAI,EAAE;AAAEC,kBAAI,EAAE,EAAR;AAAY8C,sBAAQ,EAAE,EAAtB;AAA0BC,sBAAQ,EAAE;AAApC;AAD+D,WAA5C,CAA3B;AAIA,eAAK2B,mBAAL,CAAyBzE,WAAzB,GAAuCP,SAAvC,CAAiD,UAAAQ,MAAM,EAAI;AACzD,gBAAIA,MAAJ,EAAY;AACV,kBAAMyE,GAAG,GAAGzE,MAAZ;;AACA,oBAAI,CAACiD,WAAL,CACGyB,WADH,CACe,MAAI,CAACV,SADpB,EAC+BhE,MAAM,CAACF,IADtC,EAC4CE,MAAM,CAAC4C,QADnD,EAC6D5C,MAAM,CAAC6C,QADpE,EAEGrD,SAFH,CAGI,YAAM;AACJ,sBAAI,CAACoE,gBAAL;AACD,eALL,EAMI,UAAA1D,KAAK;AAAA,uBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,eANT;AAQD;AACF,WAZD;AAaD;AA3G0B;AAAA;AAAA,kCA6GjBuE,KA7GiB,EA6GW;AACpC,cAAMC,SAAS,GAAG,KAAK/E,IAAL,CAAUiE,KAAV,CAAgBe,SAAhB,CAA0B,UAAAC,CAAC;AAAA,mBAAIA,CAAC,KAAKH,KAAK,CAACI,IAAN,CAAWlF,IAArB;AAAA,WAA3B,CAAlB;AAEA,yFAAgB,KAAKA,IAAL,CAAUiE,KAA1B,EAAiCc,SAAjC,EAA4CD,KAAK,CAACK,YAAlD;;AAEA,eAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,KAAK9B,UAAL,CAAgB+B,YAAhB,CAA6B9B,MAAzD,EAAiE6B,KAAK,EAAtE;AACE,iBAAKpF,IAAL,CAAUiE,KAAV,CAAgBmB,KAAhB,EAAuBpC,QAAvB,GAAkCoC,KAAlC;AADF;;AAGA,eAAK9B,UAAL,CAAgBtD,IAAhB,GAAuB,KAAKA,IAAL,CAAUiE,KAAjC;AAEA,eAAKb,WAAL,CAAiBkC,eAAjB,CAAiC,KAAKtF,IAAL,CAAUiE,KAA3C,EAAkDtE,SAAlD,CACE,YAAM,CAAE,CADV,EAEE,UAAAU,KAAK;AAAA,mBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,WAFP;AAID;AA3H0B;AAAA;AAAA,gCA6HnBgF,OA7HmB,EA6HJ;AAAA;;AACrB,eAAKnC,WAAL,CAAiBS,aAAjB,CAA+B0B,OAAO,CAACrD,EAAvC,EAA2C,2DAAOsD,IAAlD,EAAwD7F,SAAxD,CACE,YAAM;AACJ,kBAAI,CAACoE,gBAAL;AACD,WAHH,EAIE,UAAA1D,KAAK;AAAA,mBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,WAJP;AAMD;AApI0B;AAAA;AAAA,mCAsIhB2B,EAtIgB,EAsIZ;AAAA;;AACb,eAAKkB,WAAL,CAAiBqC,WAAjB,CAA6BvD,EAA7B,EAAiCvC,SAAjC,CACE,YAAM;AACJ,kBAAI,CAACoE,gBAAL;AACD,WAHH,EAIE,UAAA1D,KAAK;AAAA,mBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,WAJP;AAMD;AA7I0B;AAAA;AAAA,wCA+IX;AAAA;;AACd,eAAKf,cAAL,CAAoBkG,cAApB,CAAmC,KAAKvB,SAAxC,EAAmDxE,SAAnD,CACE,YAAM;AACJ,kBAAI,CAACgG,OAAL,GAAe,CAAC,MAAI,CAACA,OAArB;AACD,WAHH,EAIE,UAAAtF,KAAK;AAAA,mBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,WAJP;AAMD;AAtJ0B;AAAA;AAAA,2CAwJR;AAAA;;AACjB,eAAKjB,WAAL,CAAiBG,QAAjB,GAA4BE,SAA5B,CACE,UAAAC,GAAG,EAAI;AACL,mBAAI,CAACI,IAAL,CAAUiE,KAAV,GAAmBrE,GAAiB,CAACgG,IAAlB,CAAuB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC1B,SAAF,KAAgB,OAAI,CAACA,SAAzB;AAAA,aAAxB,EAA4DF,KAA/E;AAEA,mBAAI,CAACX,UAAL,CAAgBtD,IAAhB,GAAuB,OAAI,CAACA,IAAL,CAAUiE,KAAjC;AACD,WALH,EAME,UAAA5D,KAAK;AAAA,mBAAI2D,OAAO,CAAC3D,KAAR,CAAcA,KAAK,CAACE,OAApB,CAAJ;AAAA,WANP;AAQD;AAjK0B;;AAAA;AAAA,OAA7B;;;;cA6BoB;;cACK;;cACG;;cACH;;;;AA9Be,8DAArC,gEAAU,8DAAV,EAAmB;AAAE,gBAAQ;AAAV,KAAnB,CAAqC,G,0BAAA,E,MAAA,E,MAAA;AAE7B,8DAAR,6DAAQ,G,0BAAA,E,MAAA,E,MAAA;AAJE4C,oBAAgB,6DAL5B,gEAAU;AACT3C,cAAQ,EAAE,aADD;AAETC,cAAQ,EAAR;AAAA;AAAA,0HAFS;;;;AAAA,KAAV,CAK4B,GAAhB0C,gBAAgB,CAAhB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrCN,QAAMpC,MAAM,GAAG,CAAC,2DAAD,CAAf;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKP,QAAa+E,YAAY;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,oCAErBlF,IAFqB,EAGrBC,KAHqB,EAGK;AAC1B,iBAAO,IAAP;AACD;AALsB;;AAAA;AAAA,OAAzB;;AAAaiF,gBAAY,6DAHxB,iEAAW;AACVhF,gBAAU,EAAE;AADF,KAAX,CAGwB,GAAZgF,YAAY,CAAZ;;;;;;;;;;;;;;;;ACPb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AA4BA,QAAYC,MAAZ;;AAAA,eAAYA,MAAZ,EAAkB;AAChB;AACA;AACA;AACD,KAJD,EAAYA,MAAM,KAANA,MAAM,MAAlB;;;;;;;;;;;;;;;;;AC5BA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;;;;;AAgCA,QAAaC,aAAa;AAAA;AAAA,KAA1B;;AAAaA,iBAAa,6DAXzB,+DAAS;AACR3E,aAAO,EAAE,CAAC,4DAAD,EAAe,4DAAf,EAA6B,kEAA7B,EAAkD,0DAAlD,EAA+D,iEAA/D,CADD;AAERI,eAAS,+BAAM,+CAAN,sBAAgC,kDAAhC,sBAA6D,8CAA7D,EAFD;AAGRC,kBAAY,+BACP,sDADO,sBAEP,sDAFO,sBAGP,+CAHO,EAHJ;AAQRH,aAAO,+BAAM,sDAAN,sBAAuC,sDAAvC,EARC;AASR0E,qBAAe,qBAAM,sDAAN;AATP,KAAT,CAWyB,GAAbD,aAAa,CAAb;;;;;;;;;;;;;;;;AChCb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAMO,QAAME,KAAK,GAAG,CAAC,4DAAD,CAAd;AAEA,QAAM7D,QAAQ,GAAG,CAAC,+EAAD,EAAiB,sEAAjB,CAAjB,C,CAKP;;;;;;;;;;;;;;;;;ACbA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAQA,QAAa8D,UAAU;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,kCACXtD,KADW,EACe;AAClC,cAAM1C,MAAM,GAAG,2DAAO0C,KAAP,CAAf;AACA,iBAAO1C,MAAP;AACD;AAJoB;;AAAA;AAAA,OAAvB;;AAAagG,cAAU,6DAHtB,2DAAK;AACJ5B,UAAI,EAAE;AADF,KAAL,CAGsB,GAAV4B,UAAU,CAAV;;;;;;;;;;;;;;;;ACRb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAWA,QAAaC,cAAc;AAGzB,8BAAoBtE,IAApB,EAA8CzC,IAA9C,EAAiE;AAAA;;AAA7C,aAAAyC,IAAA,GAAAA,IAAA;AAA0B,aAAAzC,IAAA,GAAAA,IAAA;AAF9C,aAAA0C,OAAA,GAAU,yEAAYC,MAAZ,GAAqB,SAA/B;AAEmE;;AAH1C;AAAA;AAAA,uCAKVE,EALU,EAKE;AACzB,iBAAO,KAAKJ,IAAL,qBAAoB,KAAKC,OAAzB,cAAoC,KAAK1C,IAAL,CAAUK,MAA9C,qBAA+DwC,EAA/D,GAAqE;AAC1EE,wBAAY,EAAE;AAD4D,WAArE,CAAP;AAGD;AATwB;AAAA;AAAA,uCAWVF,EAXU,EAWEqC,IAXF,EAWgB;AACvC,iBAAO,KAAKzC,IAAL,CAAUuE,GAAV,WACF,KAAKtE,OADH,cACc,KAAK1C,IAAL,CAAUK,MADxB,cAEL;AAAEwC,cAAE,EAAFA,EAAF;AAAMqC,gBAAI,EAAJA;AAAN,WAFK,EAGL;AACEnC,wBAAY,EAAE;AADhB,WAHK,CAAP;AAOD;AAnBwB;AAAA;AAAA,uCAqBVmC,IArBU,EAqBI;AAC3B,iBAAO,KAAKzC,IAAL,CAAUwE,IAAV,WACF,KAAKvE,OADH,cACc,KAAK1C,IAAL,CAAUK,MADxB,cAEL;AAAE6E,gBAAI,EAAJA;AAAF,WAFK,EAGL;AACEnC,wBAAY,EAAE;AADhB,WAHK,CAAP;AAOD;AA7BwB;;AAAA;AAAA,OAA3B;;;;cAG4B;;cAA0B;;;;AAHzCgE,kBAAc,6DAH1B,iEAAW;AACVtF,gBAAU,EAAE;AADF,KAAX,CAG0B,GAAdsF,cAAc,CAAd;;;;;;;;;;;;;;;;ACXb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAUA,QAAaG,WAAW;AAKtB,2BAAoBzE,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAJpB,aAAAC,OAAA,GAAU,yEAAYC,MAAZ,GAAqB,MAA/B;AAKE,aAAKC,MAAL,GAAc,IAAI,mEAAJ,GAAuBuE,WAAvB,CAAmCC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnC,EAAkEC,MAAhF;AACD;;AAPqB;AAAA;AAAA,oCASVxC,SATU,EASCI,IATD,EASOxB,QATP,EASiBC,QATjB,EAS2B;AAC/C,iBAAO,KAAKlB,IAAL,CAAUwE,IAAV,WACF,KAAKvE,OADH,cACc,KAAKE,MADnB,qBACoCkC,SADpC,GAEL;AAAEI,gBAAI,EAAJA,IAAF;AAAQxB,oBAAQ,EAARA,QAAR;AAAkBC,oBAAQ,EAARA;AAAlB,WAFK,EAGL;AACEZ,wBAAY,EAAE;AADhB,WAHK,CAAP;AAOD;AAjBqB;AAAA;AAAA,oCAmBVF,EAnBU,EAmBNqC,IAnBM,EAmBAxB,QAnBA,EAmBU;AAC9B,iBAAO,KAAKjB,IAAL,CAAUuE,GAAV,WACF,KAAKtE,OADH,cACc,KAAKE,MADnB,cAEL;AAAEC,cAAE,EAAFA,EAAF;AAAMqC,gBAAI,EAAJA,IAAN;AAAYxB,oBAAQ,EAARA;AAAZ,WAFK,EAGL;AACEX,wBAAY,EAAE;AADhB,WAHK,CAAP;AAOD;AA3BqB;AAAA;AAAA,sCA6BRF,EA7BQ,EA6BJyB,MA7BI,EA6BI;AACxB,iBAAO,KAAK7B,IAAL,CAAUuE,GAAV,WACF,KAAKtE,OADH,cACc,KAAKE,MADnB,oBAEL;AAAEC,cAAE,EAAFA,EAAF;AAAMyB,kBAAM,EAANA;AAAN,WAFK,EAGL;AACEvB,wBAAY,EAAE;AADhB,WAHK,CAAP;AAOD;AArCqB;AAAA;AAAA,wCAuCN6B,KAvCM,EAuCC;AACrB,iBAAO,KAAKnC,IAAL,CAAUuE,GAAV,WACF,KAAKtE,OADH,cACc,KAAKE,MADnB,sBAEL;AAAEgC,iBAAK,EAALA;AAAF,WAFK,EAGL;AACE7B,wBAAY,EAAE;AADhB,WAHK,CAAP;AAOD;AA/CqB;AAAA;AAAA,oCAiDVF,EAjDU,EAiDN;AACd,iBAAO,KAAKJ,IAAL,qBAAoB,KAAKC,OAAzB,cAAoC,KAAKE,MAAzC,qBAA0DC,EAA1D,GAAgE;AACrEE,wBAAY,EAAE;AADuD,WAAhE,CAAP;AAGD;AArDqB;;AAAA;AAAA,OAAxB;;;;cAK4B;;;;AALfmE,eAAW,6DAHvB,iEAAW;AACVzF,gBAAU,EAAE;AADF,KAAX,CAGuB,GAAXyF,WAAW,CAAX","file":"modules-home-home-routing-module-es5.js","sourcesContent":["export default \"<button id=\\\"exit\\\" (click)=\\\"auth.logOut()\\\" mat-icon-button color=\\\"warn\\\">\\r\\n    <mat-icon>exit_to_app</mat-icon>\\r\\n</button>\\r\\n\\r\\n<app-project *ngFor=\\\"let item of this.userData;\\\" [data]='item'></app-project>\\r\\n\\r\\n<button id=\\\"add\\\" (click)=\\\"createProjectDialog()\\\" mat-fab color=\\\"primary\\\">\\r\\n    <mat-icon>add</mat-icon>\\r\\n</button>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Create project</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter project name\\\" />\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Create task</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter task\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput type=\\\"number\\\" formControlName=\\\"priority\\\" placeholder=\\\"Enter priority\\\" />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Choose a date</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"deadline\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Update project</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter project\\\" />\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Update</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Update task</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter task\\\" />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Choose a date</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"deadline\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Update</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<div [hidden]=\\\"deleted\\\" class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"card-size card mb-3\\\">\\r\\n\\r\\n      <div class=\\\"card-header\\\">\\r\\n        {{projectName}}\\r\\n\\r\\n        <button (click)=\\\"removeProject()\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon color=\\\"warn\\\">delete_outline</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button (click)=\\\"updateProjectDialog()\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon>create</mat-icon>\\r\\n        </button>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <button (click)=\\\"createTaskDialog()\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon>add_box</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"no-data\\\" *ngIf=\\\"!dataSource?.data?.length\\\"></div>\\r\\n        <table *ngIf=\\\" dataSource?.data?.length\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\"\\r\\n          cdkDropList [cdkDropListData]=\\\"dataSource\\\" (cdkDropListDropped)=\\\"dropTable($event)\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"state\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-header> </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button [disabled]=\\\"element.status == 0 ? true : false \\\" (click)=\\\" setDone(element)\\\" mat-icon-button\\r\\n                color=\\\"primary\\\">\\r\\n                <mat-icon>check_circle_outline</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"priority\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Pr. </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              cdkDragHandle mat-cell *matCellDef=\\\"let element\\\"> {{element.priority}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              class=\\\"draw-border\\\" mat-cell *matCellDef=\\\" let element\\\"> {{element.name}}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <ng-container matColumnDef=\\\"deadline\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Deadline </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <u> {{element.deadline | date:\\\"dd:MM:yyyy\\\"}}</u>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{element.status | Status}}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"update\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-header> </th>\\r\\n            <th mat-header-cell *matHeaderCellDef> </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button color=\\\"accent\\\" [disabled]=\\\"element.status == 0 ? true : false \\\"\\r\\n                (click)=\\\" updateTaskDialog(element)\\\" mat-icon-button color=\\\"primary\\\">\\r\\n                <mat-icon>ballot</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"remove\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-header> </th>\\r\\n            <th mat-header-cell *matHeaderCellDef> </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button (click)=\\\"removeTask(element.id)\\\" color=\\\"accent\\\" [disabled]=\\\"element.status == 0 ? false : false \\\"\\r\\n                (click)=\\\"null\\\" mat-icon-button color=\\\"primary\\\">\\r\\n                <mat-icon color=\\\"warn\\\">delete_outline</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" cdkDrag [cdkDragData]=\\\"row\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\";","/** @format */\r\n\r\nexport const components = [];\r\n","export default \"/** @format */\\r\\n\\r\\n#exit {\\r\\n  float: right;\\r\\n\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  top: 1rem;\\r\\n  right: 1rem;\\r\\n}\\r\\n\\r\\n#add {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n  margin-top: 50px;\\r\\n\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  bottom: 1rem;\\r\\n  align-self: flex-end;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL2hvbWUvY29udGFpbmVycy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhOztBQUViO0VBQ0UsWUFBWTs7RUFFWix3QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLFNBQVM7RUFDVCxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7O0VBRWhCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0QiIsImZpbGUiOiJzcmMvbW9kdWxlcy9ob21lL2NvbnRhaW5lcnMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGZvcm1hdCAqL1xyXG5cclxuI2V4aXQge1xyXG4gIGZsb2F0OiByaWdodDtcclxuXHJcbiAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgdG9wOiAxcmVtO1xyXG4gIHJpZ2h0OiAxcmVtO1xyXG59XHJcblxyXG4jYWRkIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxuXHJcbiAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgYm90dG9tOiAxcmVtO1xyXG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG59XHJcbiJdfQ== */\";","/** @format */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/modules/auth/services';\r\nimport { DataService } from '../../services';\r\n\r\nimport { Project } from 'src/modules/project/models';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { CreateProjectDialogComponent } from '../../../project/components/create-project-dialog/createProjectDialog.component';\r\nimport { ProjectForCreate } from 'src/modules/project/models/task.models';\r\nimport { ProjectService } from 'src/modules/project/services';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userData: Project[];\r\n\r\n  createProjectDialogRef: MatDialogRef<CreateProjectDialogComponent, ProjectForCreate>;\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private dataService: DataService,\r\n    private dialog: MatDialog,\r\n    private projectService: ProjectService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dataService.getData$(this.auth.UserId).subscribe(res => {\r\n      this.userData = res as Project[];\r\n    });\r\n  }\r\n\r\n  createProjectDialog() {\r\n    this.createProjectDialogRef = this.dialog.open(CreateProjectDialogComponent, {\r\n      data: { task: '' }\r\n    });\r\n\r\n    this.createProjectDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.projectService.createProject$(result.task).subscribe(\r\n          () => {\r\n            this.dataService.getData$(this.auth.UserId).subscribe(res => {\r\n              this.userData = res as Project[];\r\n            });\r\n          },\r\n          error => alert(error.message)\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HomeComponent } from './home/home.component';\r\n\r\nexport const containers = [HomeComponent];\r\n\r\nexport * from './home/home.component';\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeGuard implements CanActivate {\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n}\r\n","import { HomeGuard } from './home.guard';\r\n\r\nexport const guards = [HomeGuard];\r\n\r\nexport * from './home.guard';\r\n","/** @format */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeModule } from './home.module';\r\n\r\nimport * as homeContainers from './containers';\r\n\r\nimport * as homeGuards from './guards';\r\n\r\nimport { DataResolve } from './services/data.resolve';\r\nimport { TaskResolve } from '../project/services/task-service/task.resolve';\r\n\r\nexport const ROUTES: Routes = [\r\n  {\r\n    path: 'home',\r\n    canActivate: [],\r\n    component: homeContainers.HomeComponent\r\n    // resolve: {\r\n    //   dataResolver: DataResolve\r\n    // }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [HomeModule, RouterModule.forChild(ROUTES)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule {}\r\n","/** @format */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport * as authComponents from './components';\r\n\r\nimport * as authContainers from './containers';\r\n\r\nimport * as authGuards from './guards';\r\n\r\nimport * as authServices from './services';\r\nimport { ProjectModule } from '../project/project.module';\r\nimport { MaterialModule } from 'src/app/app.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ProjectModule,\r\n    MaterialModule\r\n  ],\r\n  providers: [...authServices.services, ...authGuards.guards],\r\n  declarations: [...authContainers.containers, ...authComponents.components],\r\n  exports: [...authContainers.containers, ...authComponents.components]\r\n})\r\nexport class HomeModule {}\r\n","/** @format */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { DataService } from '.';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { AuthService } from 'src/modules/auth/services';\r\n\r\n@Injectable()\r\nexport class DataResolve implements Resolve<any> {\r\n  constructor(private dataService: DataService, private auth: AuthService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    return this.dataService.getData$(this.auth.UserId);\r\n  }\r\n}\r\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/modules/auth/services';\nimport { Observable } from 'rxjs';\nimport { Project } from 'src/modules/project/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  baseUrl = environment.apiUrl + 'data';\n  userId: number;\n\n  constructor(private http: HttpClient, private auth: AuthService) {\n    this.userId = auth.UserId;\n  }\n\n  getData$(id: number = this.userId) {\n    return this.http.get(`${this.baseUrl}/${id}/getData`, { responseType: 'json' });\n  }\n}\n","/** @format */\r\n\r\nimport { DataService } from './data.service';\r\nimport { DataResolve } from './data.resolve';\r\n\r\nexport const services = [DataService, DataResolve];\r\n\r\nexport * from './data.service';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvY3JlYXRlLXByb2plY3QtZGlhbG9nL2NyZWF0ZVByb2plY3JEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-createProjecrDialog',\n  templateUrl: './createProjecrDialog.component.html',\n  styleUrls: ['./createProjecrDialog.component.css']\n})\nexport class CreateProjectDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<CreateProjectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvY3JlYXRlLXRhc2stZGlhbG9nL2NyZWF0ZVRhc2tEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-createTaskDialog',\n  templateUrl: './createTaskDialog.component.html',\n  styleUrls: ['./createTaskDialog.component.css']\n})\nexport class CreateTaskDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<CreateTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: ['', Validators.required],\n      deadline: ['', Validators.required],\n      priority: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","/** @format */\r\n\r\nimport { UpdateTaskDialogComponent } from './update-task-dialog/updateTaskDialog.component';\r\nimport { CreateTaskDialogComponent } from './create-task-dialog/createTaskDialog.component';\r\nimport { UpdateProjectDialogComponent } from './update-project-dialog/updateProjectDialog.component';\r\nimport { CreateProjectDialogComponent } from './create-project-dialog/createProjectDialog.component';\r\n\r\nexport const components = [\r\n  UpdateTaskDialogComponent,\r\n  UpdateProjectDialogComponent,\r\n  CreateTaskDialogComponent,\r\n  CreateProjectDialogComponent\r\n];\r\n\r\nexport * from './update-task-dialog/updateTaskDialog.component';\r\nexport * from './create-task-dialog/createTaskDialog.component';\r\nexport * from './update-project-dialog/updateProjectDialog.component';\r\nexport * from './create-project-dialog/createProjectDialog.component';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvdXBkYXRlLXByb2plY3QtZGlhbG9nL3VwZGF0ZVByb2plY3REaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-updateProjectDialog',\n  templateUrl: './updateProjectDialog.component.html',\n  styleUrls: ['./updateProjectDialog.component.css']\n})\nexport class UpdateProjectDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateProjectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: [this.data.task, Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvdXBkYXRlLXRhc2stZGlhbG9nL3VwZGF0ZVRhc2tEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TaskForUpdate } from '../../models/task.models';\n\n@Component({\n  selector: 'app-updateTaskDialog',\n  templateUrl: './updateTaskDialog.component.html',\n  styleUrls: ['./updateTaskDialog.component.css']\n})\nexport class UpdateTaskDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: [this.data.task, Validators.required],\n      deadline: [this.data.deadline, Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","import { ProjectComponent } from './project/project.component';\r\n\r\nexport const containers = [ProjectComponent];\r\n\r\nexport * from './project/project.component';\r\n","export default \"/** @format */\\r\\n\\r\\n.container {\\r\\n  align-items: flex-start;\\r\\n}\\r\\n\\r\\n.no-data {\\r\\n  background: url('no-data.jpeg') no-repeat center center;\\r\\n  height: 500px;\\r\\n  width: auto;\\r\\n}\\r\\n\\r\\ncard-container {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.card-header button {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n#add {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n  margin-top: 50px;\\r\\n\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  bottom: 1rem;\\r\\n  align-self: flex-end;\\r\\n}\\r\\n\\r\\n/*  */\\r\\n\\r\\n.done {\\r\\n  background: -webkit-linear-gradient(top, rgb(255, 255, 255) 1%, rgb(183, 230, 193) 99%);\\r\\n}\\r\\n\\r\\n.expired {\\r\\n  background: -webkit-linear-gradient(top, rgb(255, 255, 255) 1%, rgb(253, 0, 0) 99%);\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.card-size {\\r\\n  width: 100%;\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\\r\\ntd.mat-cell {\\r\\n  padding: 20px 0;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.mat-column-name {\\r\\n  word-wrap: break-word !important;\\r\\n  white-space: unset !important;\\r\\n  flex: 0 0 60% !important;\\r\\n  width: 60% !important;\\r\\n  overflow-wrap: break-word;\\r\\n  word-wrap: break-word;\\r\\n\\r\\n  word-break: break-word;\\r\\n\\r\\n  -ms-hyphens: auto;\\r\\n  -webkit-hyphens: auto;\\r\\n  hyphens: auto;\\r\\n}\\r\\n\\r\\n.mat-column-position {\\r\\n  word-wrap: break-word !important;\\r\\n  white-space: unset !important;\\r\\n  flex: 0 0 7% !important;\\r\\n  width: 7% !important;\\r\\n  overflow-wrap: break-word;\\r\\n  word-wrap: break-word;\\r\\n\\r\\n  word-break: break-word;\\r\\n\\r\\n  -ms-hyphens: auto;\\r\\n  -webkit-hyphens: auto;\\r\\n  hyphens: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL3Byb2plY3QvY29udGFpbmVycy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhOztBQUViO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsdURBQXdFO0VBQ3hFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7O0VBRWhCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQSxLQUFLOztBQUVMO0VBQ0UsdUZBQXVGO0FBQ3pGOztBQUVBO0VBQ0UsbUZBQW1GO0FBQ3JGOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMsNkJBQTZCO0VBQzdCLHdCQUF3QjtFQUN4QixxQkFBcUI7RUFDckIseUJBQXlCO0VBQ3pCLHFCQUFxQjs7RUFFckIsc0JBQXNCOztFQUV0QixpQkFBaUI7RUFFakIscUJBQXFCO0VBQ3JCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdDQUFnQztFQUNoQyw2QkFBNkI7RUFDN0IsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtFQUNwQix5QkFBeUI7RUFDekIscUJBQXFCOztFQUVyQixzQkFBc0I7O0VBRXRCLGlCQUFpQjtFQUVqQixxQkFBcUI7RUFDckIsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9tb2R1bGVzL3Byb2plY3QvY29udGFpbmVycy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAZm9ybWF0ICovXHJcblxyXG4uY29udGFpbmVyIHtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxufVxyXG5cclxuLm5vLWRhdGEge1xyXG4gIGJhY2tncm91bmQ6IHVybCguLi8uLi8uLi8uLi9hc3NldHMvbm8tZGF0YS5qcGVnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcclxuICBoZWlnaHQ6IDUwMHB4O1xyXG4gIHdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG5jYXJkLWNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uY2FyZC1oZWFkZXIgYnV0dG9uIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbiNhZGQge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG5cclxuICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICBib3R0b206IDFyZW07XHJcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbn1cclxuXHJcbi8qICAqL1xyXG5cclxuLmRvbmUge1xyXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiKDI1NSwgMjU1LCAyNTUpIDElLCByZ2IoMTgzLCAyMzAsIDE5MykgOTklKTtcclxufVxyXG5cclxuLmV4cGlyZWQge1xyXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiKDI1NSwgMjU1LCAyNTUpIDElLCByZ2IoMjUzLCAwLCAwKSA5OSUpO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jYXJkLXNpemUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbn1cclxuXHJcbnRkLm1hdC1jZWxsIHtcclxuICBwYWRkaW5nOiAyMHB4IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4ubWF0LWNvbHVtbi1uYW1lIHtcclxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcclxuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICBmbGV4OiAwIDAgNjAlICFpbXBvcnRhbnQ7XHJcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xyXG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG5cclxuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG5cclxuICAtbXMtaHlwaGVuczogYXV0bztcclxuICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xyXG4gIGh5cGhlbnM6IGF1dG87XHJcbn1cclxuXHJcbi5tYXQtY29sdW1uLXBvc2l0aW9uIHtcclxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcclxuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICBmbGV4OiAwIDAgNyUgIWltcG9ydGFudDtcclxuICB3aWR0aDogNyUgIWltcG9ydGFudDtcclxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuXHJcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcclxuXHJcbiAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xyXG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcclxuICBoeXBoZW5zOiBhdXRvO1xyXG59XHJcbiJdfQ== */\";","/** @format */\r\n\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  DoCheck\r\n} from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { filter } from 'rxjs/operators';\r\nimport { UpdateTaskDialogComponent } from '../../components/update-task-dialog/updateTaskDialog.component';\r\n\r\nimport {\r\n  TaskForUpdate,\r\n  Status,\r\n  Task,\r\n  TaskForCreate,\r\n  ProjectForUpdate,\r\n  ProjectForCreate\r\n} from '../../models/task.models';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Project } from '../../models';\r\nimport { TaskService, ProjectService } from '../../services';\r\nimport { DataService } from 'src/modules/home/services';\r\nimport { CreateTaskDialogComponent, UpdateProjectDialogComponent } from '../../components';\r\nimport { AuthService } from 'src/modules/auth/services';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit, DoCheck {\r\n  //#region prop\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  @Input() data: Project;\r\n\r\n  displayedColumns: string[] = [\r\n    'state',\r\n    'priority',\r\n    'name',\r\n    'deadline',\r\n    'status',\r\n    'update',\r\n    'remove'\r\n  ];\r\n  dataSource: MatTableDataSource<Task>;\r\n\r\n  updateTaskDialogRef: MatDialogRef<UpdateTaskDialogComponent, TaskForUpdate>;\r\n  createTaskDialogRef: MatDialogRef<CreateTaskDialogComponent, TaskForCreate>;\r\n\r\n  updateProjectDialogRef: MatDialogRef<UpdateProjectDialogComponent, ProjectForUpdate>;\r\n\r\n  projectId: number;\r\n  projectName: string;\r\n\r\n  deleted: boolean;\r\n  //#endregion\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private taskService: TaskService,\r\n    private projectService: ProjectService,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngDoCheck(): void {\r\n    if (this.dataSource?.data?.length) {\r\n      const [checkingTask] = this.dataSource.data;\r\n      if (\r\n        new Date(checkingTask.deadline).getTime() < new Date().getTime() &&\r\n        checkingTask.status === Status.Onway\r\n      )\r\n        this.taskService.updateStatus$(checkingTask.id, Status.Expired).subscribe(\r\n          () => this._updateTableData(),\r\n          error => console.error(error.message)\r\n        );\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.data.tasks);\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.projectId = this.data.projectId;\r\n    this.projectName = this.data.projectName;\r\n  }\r\n\r\n  updateTaskDialog(transfer: Task) {\r\n    this.updateTaskDialogRef = this.dialog.open(UpdateTaskDialogComponent, {\r\n      data: { task: transfer.name, deadline: transfer.deadline }\r\n    });\r\n\r\n    this.updateTaskDialogRef.afterClosed().subscribe(result => {\r\n      if (transfer) {\r\n        this.taskService.updateTask$(transfer.id, result.task, result.deadline).subscribe(\r\n          () => {\r\n            this._updateTableData();\r\n          },\r\n          error => console.error(error.message)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  updateProjectDialog() {\r\n    this.updateProjectDialogRef = this.dialog.open(UpdateProjectDialogComponent, {\r\n      data: { task: this.projectName }\r\n    });\r\n\r\n    this.updateProjectDialogRef.afterClosed().subscribe(result => {\r\n      this.projectService.updateProject$(this.projectId, result.task).subscribe(\r\n        () => {\r\n          this.projectName = result.task;\r\n        },\r\n        error => console.error(error.message)\r\n      );\r\n    });\r\n  }\r\n\r\n  createTaskDialog() {\r\n    this.createTaskDialogRef = this.dialog.open(CreateTaskDialogComponent, {\r\n      data: { task: '', deadline: '', priority: '' }\r\n    });\r\n\r\n    this.createTaskDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        const val = result;\r\n        this.taskService\r\n          .createTask$(this.projectId, result.task, result.deadline, result.priority)\r\n          .subscribe(\r\n            () => {\r\n              this._updateTableData();\r\n            },\r\n            error => console.error(error.message)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  dropTable(event: CdkDragDrop<Task[]>) {\r\n    const prevIndex = this.data.tasks.findIndex(d => d === event.item.data);\r\n\r\n    moveItemInArray(this.data.tasks, prevIndex, event.currentIndex);\r\n\r\n    for (let index = 0; index < this.dataSource.filteredData.length; index++)\r\n      this.data.tasks[index].priority = index;\r\n\r\n    this.dataSource.data = this.data.tasks;\r\n\r\n    this.taskService.updatePrioraty$(this.data.tasks).subscribe(\r\n      () => {},\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n\r\n  setDone(element: Task) {\r\n    this.taskService.updateStatus$(element.id, Status.Done).subscribe(\r\n      () => {\r\n        this._updateTableData();\r\n      },\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n\r\n  removeTask(id) {\r\n    this.taskService.removeTask$(id).subscribe(\r\n      () => {\r\n        this._updateTableData();\r\n      },\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n\r\n  removeProject() {\r\n    this.projectService.removeProject$(this.projectId).subscribe(\r\n      () => {\r\n        this.deleted = !this.deleted;\r\n      },\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n\r\n  _updateTableData() {\r\n    this.dataService.getData$().subscribe(\r\n      res => {\r\n        this.data.tasks = (res as Project[]).find(x => x.projectId === this.projectId).tasks;\r\n\r\n        this.dataSource.data = this.data.tasks;\r\n      },\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n}\r\n","import { ProjectGuard } from './project.guard';\r\n\r\nexport const guards = [ProjectGuard];\r\n\r\nexport * from './project.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectGuard implements CanActivate {\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n  \r\n}\r\n","/** @format */\r\n\r\nexport type Task = {\r\n  id: number;\r\n  name: string;\r\n  deadline: string | Date;\r\n  status: Status;\r\n  priority: number;\r\n};\r\n\r\nexport type ProjectForCreate = {\r\n  task: string;\r\n};\r\n\r\nexport type ProjectForUpdate = {\r\n  task: string;\r\n};\r\n\r\nexport type TaskForCreate = {\r\n  task: string;\r\n  deadline: Date;\r\n  priority: number;\r\n};\r\n\r\nexport type TaskForUpdate = {\r\n  task: string;\r\n  deadline: Date;\r\n};\r\nexport enum Status {\r\n  Done,\r\n  Expired,\r\n  Onway\r\n}\r\n","/**\r\n * /* tslint:disable: ordered-imports\r\n *\r\n * @format\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport * as projectComponents from './components';\r\n\r\nimport * as projectContainers from './containers';\r\n\r\nimport * as projectGuards from './guards';\r\n\r\nimport * as projectServices from './services';\r\n\r\nimport { MaterialModule } from 'src/app/app.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, FormsModule, MaterialModule],\r\n  providers: [...projectServices.pipes, ...projectServices.services, ...projectGuards.guards],\r\n  declarations: [\r\n    ...projectContainers.containers,\r\n    ...projectComponents.components,\r\n    ...projectServices.pipes\r\n  ],\r\n  exports: [...projectContainers.containers, ...projectComponents.components],\r\n  entryComponents: [...projectComponents.components]\r\n})\r\nexport class ProjectModule {}\r\n","/** @format */\r\n\r\nimport { StatusPipe } from './pipe/status.pipe';\r\nimport { ProjectService } from './project-service/project.service';\r\nimport { TaskService } from './task-service/task.service';\r\n\r\nexport const pipes = [StatusPipe];\r\n\r\nexport const services = [ProjectService, TaskService];\r\n\r\nexport * from './pipe/status.pipe';\r\nexport * from './project-service/project.service';\r\nexport * from './task-service/task.service';\r\n// export * from './task.resolve';\r\n","/** @format */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '../../models/task.models';\n\n@Pipe({\n  name: 'Status'\n})\nexport class StatusPipe implements PipeTransform {\n  transform(value: any, ...args: any[]): any {\n    const result = Status[value as Status];\n    return result;\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthService } from 'src/modules/auth/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  baseUrl = environment.apiUrl + 'project';\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  removeProject$(id: number) {\n    return this.http.delete(`${this.baseUrl}/${this.auth.UserId}/remove/${id}`, {\n      responseType: 'json'\n    });\n  }\n\n  updateProject$(id: number, name: string) {\n    return this.http.put(\n      `${this.baseUrl}/${this.auth.UserId}/update`,\n      { id, name },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  createProject$(name: string) {\n    return this.http.post(\n      `${this.baseUrl}/${this.auth.UserId}/create`,\n      { name },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  baseUrl = environment.apiUrl + 'task';\n\n  userId: any;\n\n  constructor(private http: HttpClient) {\n    this.userId = new JwtHelperService().decodeToken(localStorage.getItem('token')).nameid;\n  }\n\n  createTask$(projectId, name, deadline, priority) {\n    return this.http.post(\n      `${this.baseUrl}/${this.userId}/create/${projectId}`,\n      { name, deadline, priority },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateTask$(id, name, deadline) {\n    return this.http.put(\n      `${this.baseUrl}/${this.userId}/update`,\n      { id, name, deadline },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateStatus$(id, status) {\n    return this.http.put(\n      `${this.baseUrl}/${this.userId}/updateStatus`,\n      { id, status },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updatePrioraty$(tasks) {\n    return this.http.put(\n      `${this.baseUrl}/${this.userId}/updatePrioraty`,\n      { tasks },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  removeTask$(id) {\n    return this.http.delete(`${this.baseUrl}/${this.userId}/remove/${id}`, {\n      responseType: 'json'\n    });\n  }\n}\n"]}