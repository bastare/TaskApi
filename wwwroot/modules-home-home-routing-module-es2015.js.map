{"version":3,"sources":["./src/modules/home/containers/home/home.component.html","./src/modules/project/components/create-project-dialog/createProjecrDialog.component.html","./src/modules/project/components/create-task-dialog/createTaskDialog.component.html","./src/modules/project/components/update-project-dialog/updateProjectDialog.component.html","./src/modules/project/components/update-task-dialog/updateTaskDialog.component.html","./src/modules/project/containers/project/project.component.html","./src/modules/home/components/index.ts","./src/modules/home/containers/home/home.component.css","./src/modules/home/containers/home/home.component.ts","./src/modules/home/containers/index.ts","./src/modules/home/guards/home.guard.ts","./src/modules/home/guards/index.ts","./src/modules/home/home-routing.module.ts","./src/modules/home/home.module.ts","./src/modules/home/services/data.resolve.ts","./src/modules/home/services/data.service.ts","./src/modules/home/services/index.ts","./src/modules/project/components/create-project-dialog/createProjecrDialog.component.css","./src/modules/project/components/create-project-dialog/createProjectDialog.component.ts","./src/modules/project/components/create-task-dialog/createTaskDialog.component.css","./src/modules/project/components/create-task-dialog/createTaskDialog.component.ts","./src/modules/project/components/index.ts","./src/modules/project/components/update-project-dialog/updateProjectDialog.component.css","./src/modules/project/components/update-project-dialog/updateProjectDialog.component.ts","./src/modules/project/components/update-task-dialog/updateTaskDialog.component.css","./src/modules/project/components/update-task-dialog/updateTaskDialog.component.ts","./src/modules/project/containers/index.ts","./src/modules/project/containers/project/project.component.css","./src/modules/project/containers/project/project.component.ts","./src/modules/project/guards/index.ts","./src/modules/project/guards/project.guard.ts","./src/modules/project/models/task.models.ts","./src/modules/project/project.module.ts","./src/modules/project/services/index.ts","./src/modules/project/services/pipe/status.pipe.ts","./src/modules/project/services/project-service/project.service.ts","./src/modules/project/services/task-service/task.service.ts"],"names":[],"mappings":"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","file":"modules-home-home-routing-module-es2015.js","sourcesContent":["export default \"<button id=\\\"exit\\\" (click)=\\\"auth.logOut()\\\" mat-icon-button color=\\\"warn\\\">\\r\\n    <mat-icon>exit_to_app</mat-icon>\\r\\n</button>\\r\\n\\r\\n<app-project *ngFor=\\\"let item of this.userData;\\\" [data]='item'></app-project>\\r\\n\\r\\n<button id=\\\"add\\\" (click)=\\\"createProjectDialog()\\\" mat-fab color=\\\"primary\\\">\\r\\n    <mat-icon>add</mat-icon>\\r\\n</button>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Create project</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter project name\\\" />\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Create task</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter task\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput type=\\\"number\\\" formControlName=\\\"priority\\\" placeholder=\\\"Enter priority\\\" />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Choose a date</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"deadline\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Update project</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter project\\\" />\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Update</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Update task</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter task\\\" />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Choose a date</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"deadline\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Update</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<div [hidden]=\\\"deleted\\\" class=\\\"container\\\">\\r\\n\\r\\n  <div class=\\\"row justify-content-center\\\">\\r\\n    <div class=\\\"card-size card mb-3\\\">\\r\\n\\r\\n      <div class=\\\"card-header\\\">\\r\\n        {{projectName}}\\r\\n\\r\\n        <button (click)=\\\"removeProject()\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon color=\\\"warn\\\">delete_outline</mat-icon>\\r\\n        </button>\\r\\n\\r\\n        <button (click)=\\\"updateProjectDialog()\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon>create</mat-icon>\\r\\n        </button>\\r\\n\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"card-header\\\">\\r\\n        <button (click)=\\\"createTaskDialog()\\\" mat-icon-button color=\\\"primary\\\">\\r\\n          <mat-icon>add_box</mat-icon>\\r\\n        </button>\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <div class=\\\"card-body\\\">\\r\\n        <div class=\\\"no-data\\\" *ngIf=\\\"!dataSource?.data?.length\\\"></div>\\r\\n        <table *ngIf=\\\" dataSource?.data?.length\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\"\\r\\n          cdkDropList [cdkDropListData]=\\\"dataSource\\\" (cdkDropListDropped)=\\\"dropTable($event)\\\">\\r\\n\\r\\n          <ng-container matColumnDef=\\\"state\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-header> </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button [disabled]=\\\"element.status == 0 ? true : false \\\" (click)=\\\" setDone(element)\\\" mat-icon-button\\r\\n                color=\\\"primary\\\">\\r\\n                <mat-icon>check_circle_outline</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"priority\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Pr. </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              cdkDragHandle mat-cell *matCellDef=\\\"let element\\\"> {{element.priority}} </td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <ng-container matColumnDef=\\\"name\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              class=\\\"draw-border\\\" mat-cell *matCellDef=\\\" let element\\\"> {{element.name}}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n\\r\\n          <ng-container matColumnDef=\\\"deadline\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Deadline </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <u> {{element.deadline | date:\\\"dd:MM:yyyy\\\"}}</u>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"status\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Status </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              {{element.status | Status}}\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"update\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-header> </th>\\r\\n            <th mat-header-cell *matHeaderCellDef> </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button color=\\\"accent\\\" [disabled]=\\\"element.status == 0 ? true : false \\\"\\r\\n                (click)=\\\" updateTaskDialog(element)\\\" mat-icon-button color=\\\"primary\\\">\\r\\n                <mat-icon>ballot</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <ng-container matColumnDef=\\\"remove\\\">\\r\\n            <th mat-header-cell *matHeaderCellDef mat-header> </th>\\r\\n            <th mat-header-cell *matHeaderCellDef> </th>\\r\\n            <td [ngClass]=\\\"{'done': element.status == 0 ? true : false, 'expired': element.status == 1 ? true : false}\\\"\\r\\n              mat-cell *matCellDef=\\\"let element\\\">\\r\\n              <button (click)=\\\"removeTask(element.id)\\\" color=\\\"accent\\\" [disabled]=\\\"element.status == 0 ? false : false \\\"\\r\\n                (click)=\\\"null\\\" mat-icon-button color=\\\"primary\\\">\\r\\n                <mat-icon color=\\\"warn\\\">delete_outline</mat-icon>\\r\\n              </button>\\r\\n            </td>\\r\\n          </ng-container>\\r\\n\\r\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n          <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" cdkDrag [cdkDragData]=\\\"row\\\"></tr>\\r\\n        </table>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n</div>\";","/** @format */\r\n\r\nexport const components = [];\r\n","export default \"/** @format */\\r\\n\\r\\n#exit {\\r\\n  float: right;\\r\\n\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  top: 1rem;\\r\\n  right: 1rem;\\r\\n}\\r\\n\\r\\n#add {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n  margin-top: 50px;\\r\\n\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  bottom: 1rem;\\r\\n  align-self: flex-end;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL2hvbWUvY29udGFpbmVycy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhOztBQUViO0VBQ0UsWUFBWTs7RUFFWix3QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLFNBQVM7RUFDVCxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7O0VBRWhCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0QiIsImZpbGUiOiJzcmMvbW9kdWxlcy9ob21lL2NvbnRhaW5lcnMvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogQGZvcm1hdCAqL1xyXG5cclxuI2V4aXQge1xyXG4gIGZsb2F0OiByaWdodDtcclxuXHJcbiAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgdG9wOiAxcmVtO1xyXG4gIHJpZ2h0OiAxcmVtO1xyXG59XHJcblxyXG4jYWRkIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBtYXJnaW4tbGVmdDogYXV0bztcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgbWFyZ2luLXRvcDogNTBweDtcclxuXHJcbiAgcG9zaXRpb246IC13ZWJraXQtc3RpY2t5O1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgYm90dG9tOiAxcmVtO1xyXG4gIGFsaWduLXNlbGY6IGZsZXgtZW5kO1xyXG59XHJcbiJdfQ== */\";","/** @format */\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from 'src/modules/auth/services';\r\nimport { DataService } from '../../services';\r\n\r\nimport { Project } from 'src/modules/project/models';\r\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\r\nimport { CreateProjectDialogComponent } from '../../../project/components/create-project-dialog/createProjectDialog.component';\r\nimport { ProjectForCreate } from 'src/modules/project/models/task.models';\r\nimport { ProjectService } from 'src/modules/project/services';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n  userData: Project[];\r\n\r\n  createProjectDialogRef: MatDialogRef<CreateProjectDialogComponent, ProjectForCreate>;\r\n\r\n  constructor(\r\n    public auth: AuthService,\r\n    private dataService: DataService,\r\n    private dialog: MatDialog,\r\n    private projectService: ProjectService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.dataService.getData$(this.auth.UserId).subscribe(res => {\r\n      this.userData = res as Project[];\r\n    });\r\n  }\r\n\r\n  createProjectDialog() {\r\n    this.createProjectDialogRef = this.dialog.open(CreateProjectDialogComponent, {\r\n      data: { task: '' }\r\n    });\r\n\r\n    this.createProjectDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.projectService.createProject$(result.task).subscribe(\r\n          () => {\r\n            this.dataService.getData$(this.auth.UserId).subscribe(res => {\r\n              this.userData = res as Project[];\r\n            });\r\n          },\r\n          error => alert(error.message)\r\n        );\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { HomeComponent } from './home/home.component';\r\n\r\nexport const containers = [HomeComponent];\r\n\r\nexport * from './home/home.component';\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanActivate,\r\n  ActivatedRouteSnapshot,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HomeGuard implements CanActivate {\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n}\r\n","import { HomeGuard } from './home.guard';\r\n\r\nexport const guards = [HomeGuard];\r\n\r\nexport * from './home.guard';\r\n","/** @format */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { HomeModule } from './home.module';\r\n\r\nimport * as homeContainers from './containers';\r\n\r\nimport * as homeGuards from './guards';\r\n\r\nimport { DataResolve } from './services/data.resolve';\r\nimport { TaskResolve } from '../project/services/task-service/task.resolve';\r\n\r\nexport const ROUTES: Routes = [\r\n  {\r\n    path: 'home',\r\n    canActivate: [],\r\n    component: homeContainers.HomeComponent\r\n    // resolve: {\r\n    //   dataResolver: DataResolve\r\n    // }\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [HomeModule, RouterModule.forChild(ROUTES)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule {}\r\n","/** @format */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport * as authComponents from './components';\r\n\r\nimport * as authContainers from './containers';\r\n\r\nimport * as authGuards from './guards';\r\n\r\nimport * as authServices from './services';\r\nimport { ProjectModule } from '../project/project.module';\r\nimport { MaterialModule } from 'src/app/app.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ProjectModule,\r\n    MaterialModule\r\n  ],\r\n  providers: [...authServices.services, ...authGuards.guards],\r\n  declarations: [...authContainers.containers, ...authComponents.components],\r\n  exports: [...authContainers.containers, ...authComponents.components]\r\n})\r\nexport class HomeModule {}\r\n","/** @format */\r\n\r\nimport { Injectable } from '@angular/core';\r\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\r\nimport { DataService } from '.';\r\nimport { Observable } from 'rxjs/internal/Observable';\r\nimport { AuthService } from 'src/modules/auth/services';\r\n\r\n@Injectable()\r\nexport class DataResolve implements Resolve<any> {\r\n  constructor(private dataService: DataService, private auth: AuthService) {}\r\n\r\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\r\n    return this.dataService.getData$(this.auth.UserId);\r\n  }\r\n}\r\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/modules/auth/services';\nimport { Observable } from 'rxjs';\nimport { Project } from 'src/modules/project/models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  baseUrl = environment.apiUrl + 'data';\n  userId: number;\n\n  constructor(private http: HttpClient, private auth: AuthService) {\n    this.userId = auth.UserId;\n  }\n\n  getData$(id: number = this.userId) {\n    return this.http.get(`${this.baseUrl}/${id}/getData`, { responseType: 'json' });\n  }\n}\n","/** @format */\r\n\r\nimport { DataService } from './data.service';\r\nimport { DataResolve } from './data.resolve';\r\n\r\nexport const services = [DataService, DataResolve];\r\n\r\nexport * from './data.service';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvY3JlYXRlLXByb2plY3QtZGlhbG9nL2NyZWF0ZVByb2plY3JEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-createProjecrDialog',\n  templateUrl: './createProjecrDialog.component.html',\n  styleUrls: ['./createProjecrDialog.component.css']\n})\nexport class CreateProjectDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<CreateProjectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvY3JlYXRlLXRhc2stZGlhbG9nL2NyZWF0ZVRhc2tEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-createTaskDialog',\n  templateUrl: './createTaskDialog.component.html',\n  styleUrls: ['./createTaskDialog.component.css']\n})\nexport class CreateTaskDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<CreateTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: ['', Validators.required],\n      deadline: ['', Validators.required],\n      priority: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","/** @format */\r\n\r\nimport { UpdateTaskDialogComponent } from './update-task-dialog/updateTaskDialog.component';\r\nimport { CreateTaskDialogComponent } from './create-task-dialog/createTaskDialog.component';\r\nimport { UpdateProjectDialogComponent } from './update-project-dialog/updateProjectDialog.component';\r\nimport { CreateProjectDialogComponent } from './create-project-dialog/createProjectDialog.component';\r\n\r\nexport const components = [\r\n  UpdateTaskDialogComponent,\r\n  UpdateProjectDialogComponent,\r\n  CreateTaskDialogComponent,\r\n  CreateProjectDialogComponent\r\n];\r\n\r\nexport * from './update-task-dialog/updateTaskDialog.component';\r\nexport * from './create-task-dialog/createTaskDialog.component';\r\nexport * from './update-project-dialog/updateProjectDialog.component';\r\nexport * from './create-project-dialog/createProjectDialog.component';\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvdXBkYXRlLXByb2plY3QtZGlhbG9nL3VwZGF0ZVByb2plY3REaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-updateProjectDialog',\n  templateUrl: './updateProjectDialog.component.html',\n  styleUrls: ['./updateProjectDialog.component.css']\n})\nexport class UpdateProjectDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateProjectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: [this.data.task, Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvdXBkYXRlLXRhc2stZGlhbG9nL3VwZGF0ZVRhc2tEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TaskForUpdate } from '../../models/task.models';\n\n@Component({\n  selector: 'app-updateTaskDialog',\n  templateUrl: './updateTaskDialog.component.html',\n  styleUrls: ['./updateTaskDialog.component.css']\n})\nexport class UpdateTaskDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private dialogRef: MatDialogRef<UpdateTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: [this.data.task, Validators.required],\n      deadline: [this.data.deadline, Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","import { ProjectComponent } from './project/project.component';\r\n\r\nexport const containers = [ProjectComponent];\r\n\r\nexport * from './project/project.component';\r\n","export default \"/** @format */\\r\\n\\r\\n.container {\\r\\n  align-items: flex-start;\\r\\n}\\r\\n\\r\\n.no-data {\\r\\n  background: url('no-data.jpeg') no-repeat center center;\\r\\n  height: 500px;\\r\\n  width: auto;\\r\\n}\\r\\n\\r\\ncard-container {\\r\\n  position: relative;\\r\\n}\\r\\n\\r\\n.card-header button {\\r\\n  float: right;\\r\\n}\\r\\n\\r\\n#add {\\r\\n  display: block;\\r\\n  margin-left: auto;\\r\\n  margin-right: auto;\\r\\n  margin-top: 50px;\\r\\n\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  bottom: 1rem;\\r\\n  align-self: flex-end;\\r\\n}\\r\\n\\r\\n/*  */\\r\\n\\r\\n.done {\\r\\n  background: -webkit-linear-gradient(top, rgb(255, 255, 255) 1%, rgb(183, 230, 193) 99%);\\r\\n}\\r\\n\\r\\n.expired {\\r\\n  background: -webkit-linear-gradient(top, rgb(255, 255, 255) 1%, rgb(253, 0, 0) 99%);\\r\\n}\\r\\n\\r\\ntable {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.card-size {\\r\\n  width: 100%;\\r\\n  margin-top: 50px;\\r\\n}\\r\\n\\r\\ntd.mat-cell {\\r\\n  padding: 20px 0;\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.mat-column-name {\\r\\n  word-wrap: break-word !important;\\r\\n  white-space: unset !important;\\r\\n  flex: 0 0 60% !important;\\r\\n  width: 60% !important;\\r\\n  overflow-wrap: break-word;\\r\\n  word-wrap: break-word;\\r\\n\\r\\n  word-break: break-word;\\r\\n\\r\\n  -ms-hyphens: auto;\\r\\n  -webkit-hyphens: auto;\\r\\n  hyphens: auto;\\r\\n}\\r\\n\\r\\n.mat-column-position {\\r\\n  word-wrap: break-word !important;\\r\\n  white-space: unset !important;\\r\\n  flex: 0 0 7% !important;\\r\\n  width: 7% !important;\\r\\n  overflow-wrap: break-word;\\r\\n  word-wrap: break-word;\\r\\n\\r\\n  word-break: break-word;\\r\\n\\r\\n  -ms-hyphens: auto;\\r\\n  -webkit-hyphens: auto;\\r\\n  hyphens: auto;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL3Byb2plY3QvY29udGFpbmVycy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhOztBQUViO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsdURBQXdFO0VBQ3hFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7O0VBRWhCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQSxLQUFLOztBQUVMO0VBQ0UsdUZBQXVGO0FBQ3pGOztBQUVBO0VBQ0UsbUZBQW1GO0FBQ3JGOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMsNkJBQTZCO0VBQzdCLHdCQUF3QjtFQUN4QixxQkFBcUI7RUFDckIseUJBQXlCO0VBQ3pCLHFCQUFxQjs7RUFFckIsc0JBQXNCOztFQUV0QixpQkFBaUI7RUFFakIscUJBQXFCO0VBQ3JCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdDQUFnQztFQUNoQyw2QkFBNkI7RUFDN0IsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtFQUNwQix5QkFBeUI7RUFDekIscUJBQXFCOztFQUVyQixzQkFBc0I7O0VBRXRCLGlCQUFpQjtFQUVqQixxQkFBcUI7RUFDckIsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9tb2R1bGVzL3Byb2plY3QvY29udGFpbmVycy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAZm9ybWF0ICovXHJcblxyXG4uY29udGFpbmVyIHtcclxuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcclxufVxyXG5cclxuLm5vLWRhdGEge1xyXG4gIGJhY2tncm91bmQ6IHVybCguLi8uLi8uLi8uLi9hc3NldHMvbm8tZGF0YS5qcGVnKSBuby1yZXBlYXQgY2VudGVyIGNlbnRlcjtcclxuICBoZWlnaHQ6IDUwMHB4O1xyXG4gIHdpZHRoOiBhdXRvO1xyXG59XHJcblxyXG5jYXJkLWNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG59XHJcblxyXG4uY2FyZC1oZWFkZXIgYnV0dG9uIHtcclxuICBmbG9hdDogcmlnaHQ7XHJcbn1cclxuXHJcbiNhZGQge1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogYXV0bztcclxuICBtYXJnaW4tdG9wOiA1MHB4O1xyXG5cclxuICBwb3NpdGlvbjogLXdlYmtpdC1zdGlja3k7XHJcbiAgcG9zaXRpb246IHN0aWNreTtcclxuICBib3R0b206IDFyZW07XHJcbiAgYWxpZ24tc2VsZjogZmxleC1lbmQ7XHJcbn1cclxuXHJcbi8qICAqL1xyXG5cclxuLmRvbmUge1xyXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiKDI1NSwgMjU1LCAyNTUpIDElLCByZ2IoMTgzLCAyMzAsIDE5MykgOTklKTtcclxufVxyXG5cclxuLmV4cGlyZWQge1xyXG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiKDI1NSwgMjU1LCAyNTUpIDElLCByZ2IoMjUzLCAwLCAwKSA5OSUpO1xyXG59XHJcblxyXG50YWJsZSB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5jYXJkLXNpemUge1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIG1hcmdpbi10b3A6IDUwcHg7XHJcbn1cclxuXHJcbnRkLm1hdC1jZWxsIHtcclxuICBwYWRkaW5nOiAyMHB4IDA7XHJcbiAgYm9yZGVyOiBub25lO1xyXG59XHJcblxyXG4ubWF0LWNvbHVtbi1uYW1lIHtcclxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcclxuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICBmbGV4OiAwIDAgNjAlICFpbXBvcnRhbnQ7XHJcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xyXG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XHJcbiAgd29yZC13cmFwOiBicmVhay13b3JkO1xyXG5cclxuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xyXG5cclxuICAtbXMtaHlwaGVuczogYXV0bztcclxuICAtbW96LWh5cGhlbnM6IGF1dG87XHJcbiAgLXdlYmtpdC1oeXBoZW5zOiBhdXRvO1xyXG4gIGh5cGhlbnM6IGF1dG87XHJcbn1cclxuXHJcbi5tYXQtY29sdW1uLXBvc2l0aW9uIHtcclxuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcclxuICB3aGl0ZS1zcGFjZTogdW5zZXQgIWltcG9ydGFudDtcclxuICBmbGV4OiAwIDAgNyUgIWltcG9ydGFudDtcclxuICB3aWR0aDogNyUgIWltcG9ydGFudDtcclxuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xyXG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcclxuXHJcbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcclxuXHJcbiAgLW1zLWh5cGhlbnM6IGF1dG87XHJcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xyXG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcclxuICBoeXBoZW5zOiBhdXRvO1xyXG59XHJcbiJdfQ== */\";","/** @format */\r\n\r\nimport {\r\n  Component,\r\n  OnInit,\r\n  ViewChild,\r\n  Inject,\r\n  Input,\r\n  OnChanges,\r\n  SimpleChanges,\r\n  DoCheck\r\n} from '@angular/core';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialog } from '@angular/material/dialog';\r\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\r\nimport { filter } from 'rxjs/operators';\r\nimport { UpdateTaskDialogComponent } from '../../components/update-task-dialog/updateTaskDialog.component';\r\n\r\nimport {\r\n  TaskForUpdate,\r\n  Status,\r\n  Task,\r\n  TaskForCreate,\r\n  ProjectForUpdate,\r\n  ProjectForCreate\r\n} from '../../models/task.models';\r\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\r\nimport { Project } from '../../models';\r\nimport { TaskService, ProjectService } from '../../services';\r\nimport { DataService } from 'src/modules/home/services';\r\nimport { CreateTaskDialogComponent, UpdateProjectDialogComponent } from '../../components';\r\nimport { AuthService } from 'src/modules/auth/services';\r\n\r\n@Component({\r\n  selector: 'app-project',\r\n  templateUrl: './project.component.html',\r\n  styleUrls: ['./project.component.css']\r\n})\r\nexport class ProjectComponent implements OnInit, DoCheck {\r\n  //#region prop\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n\r\n  @Input() data: Project;\r\n\r\n  displayedColumns: string[] = [\r\n    'state',\r\n    'priority',\r\n    'name',\r\n    'deadline',\r\n    'status',\r\n    'update',\r\n    'remove'\r\n  ];\r\n  dataSource: MatTableDataSource<Task>;\r\n\r\n  updateTaskDialogRef: MatDialogRef<UpdateTaskDialogComponent, TaskForUpdate>;\r\n  createTaskDialogRef: MatDialogRef<CreateTaskDialogComponent, TaskForCreate>;\r\n\r\n  updateProjectDialogRef: MatDialogRef<UpdateProjectDialogComponent, ProjectForUpdate>;\r\n\r\n  projectId: number;\r\n  projectName: string;\r\n\r\n  deleted: boolean;\r\n  //#endregion\r\n\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private taskService: TaskService,\r\n    private projectService: ProjectService,\r\n    private dataService: DataService\r\n  ) {}\r\n\r\n  ngDoCheck(): void {\r\n    if (this.dataSource?.data?.length) {\r\n      const [checkingTask] = this.dataSource.data;\r\n      if (\r\n        new Date(checkingTask.deadline).getTime() < new Date().getTime() &&\r\n        checkingTask.status === Status.Onway\r\n      )\r\n        this.taskService.updateStatus$(checkingTask.id, Status.Expired).subscribe(\r\n          () => this._updateTableData(),\r\n          error => console.error(error.message)\r\n        );\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.dataSource = new MatTableDataSource(this.data.tasks);\r\n    this.dataSource.sort = this.sort;\r\n\r\n    this.projectId = this.data.projectId;\r\n    this.projectName = this.data.projectName;\r\n  }\r\n\r\n  updateTaskDialog(transfer: Task) {\r\n    this.updateTaskDialogRef = this.dialog.open(UpdateTaskDialogComponent, {\r\n      data: { task: transfer.name, deadline: transfer.deadline }\r\n    });\r\n\r\n    this.updateTaskDialogRef.afterClosed().subscribe(result => {\r\n      if (transfer) {\r\n        this.taskService.updateTask$(transfer.id, result.task, result.deadline).subscribe(\r\n          () => {\r\n            this._updateTableData();\r\n          },\r\n          error => console.error(error.message)\r\n        );\r\n      }\r\n    });\r\n  }\r\n\r\n  updateProjectDialog() {\r\n    this.updateProjectDialogRef = this.dialog.open(UpdateProjectDialogComponent, {\r\n      data: { task: this.projectName }\r\n    });\r\n\r\n    this.updateProjectDialogRef.afterClosed().subscribe(result => {\r\n      this.projectService.updateProject$(this.projectId, result.task).subscribe(\r\n        () => {\r\n          this.projectName = result.task;\r\n        },\r\n        error => console.error(error.message)\r\n      );\r\n    });\r\n  }\r\n\r\n  createTaskDialog() {\r\n    this.createTaskDialogRef = this.dialog.open(CreateTaskDialogComponent, {\r\n      data: { task: '', deadline: '', priority: '' }\r\n    });\r\n\r\n    this.createTaskDialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        const val = result;\r\n        this.taskService\r\n          .createTask$(this.projectId, result.task, result.deadline, result.priority)\r\n          .subscribe(\r\n            () => {\r\n              this._updateTableData();\r\n            },\r\n            error => console.error(error.message)\r\n          );\r\n      }\r\n    });\r\n  }\r\n\r\n  dropTable(event: CdkDragDrop<Task[]>) {\r\n    const prevIndex = this.data.tasks.findIndex(d => d === event.item.data);\r\n\r\n    moveItemInArray(this.data.tasks, prevIndex, event.currentIndex);\r\n\r\n    for (let index = 0; index < this.dataSource.filteredData.length; index++)\r\n      this.data.tasks[index].priority = index;\r\n\r\n    this.dataSource.data = this.data.tasks;\r\n\r\n    this.taskService.updatePrioraty$(this.data.tasks).subscribe(\r\n      () => {},\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n\r\n  setDone(element: Task) {\r\n    this.taskService.updateStatus$(element.id, Status.Done).subscribe(\r\n      () => {\r\n        this._updateTableData();\r\n      },\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n\r\n  removeTask(id) {\r\n    this.taskService.removeTask$(id).subscribe(\r\n      () => {\r\n        this._updateTableData();\r\n      },\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n\r\n  removeProject() {\r\n    this.projectService.removeProject$(this.projectId).subscribe(\r\n      () => {\r\n        this.deleted = !this.deleted;\r\n      },\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n\r\n  _updateTableData() {\r\n    this.dataService.getData$().subscribe(\r\n      res => {\r\n        this.data.tasks = (res as Project[]).find(x => x.projectId === this.projectId).tasks;\r\n\r\n        this.dataSource.data = this.data.tasks;\r\n      },\r\n      error => console.error(error.message)\r\n    );\r\n  }\r\n}\r\n","import { ProjectGuard } from './project.guard';\r\n\r\nexport const guards = [ProjectGuard];\r\n\r\nexport * from './project.guard';\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProjectGuard implements CanActivate {\r\n  canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\r\n    return true;\r\n  }\r\n  \r\n}\r\n","/** @format */\r\n\r\nexport type Task = {\r\n  id: number;\r\n  name: string;\r\n  deadline: string | Date;\r\n  status: Status;\r\n  priority: number;\r\n};\r\n\r\nexport type ProjectForCreate = {\r\n  task: string;\r\n};\r\n\r\nexport type ProjectForUpdate = {\r\n  task: string;\r\n};\r\n\r\nexport type TaskForCreate = {\r\n  task: string;\r\n  deadline: Date;\r\n  priority: number;\r\n};\r\n\r\nexport type TaskForUpdate = {\r\n  task: string;\r\n  deadline: Date;\r\n};\r\nexport enum Status {\r\n  Done,\r\n  Expired,\r\n  Onway\r\n}\r\n","/**\r\n * /* tslint:disable: ordered-imports\r\n *\r\n * @format\r\n */\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\r\n\r\nimport * as projectComponents from './components';\r\n\r\nimport * as projectContainers from './containers';\r\n\r\nimport * as projectGuards from './guards';\r\n\r\nimport * as projectServices from './services';\r\n\r\nimport { MaterialModule } from 'src/app/app.module';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule, ReactiveFormsModule, FormsModule, MaterialModule],\r\n  providers: [...projectServices.pipes, ...projectServices.services, ...projectGuards.guards],\r\n  declarations: [\r\n    ...projectContainers.containers,\r\n    ...projectComponents.components,\r\n    ...projectServices.pipes\r\n  ],\r\n  exports: [...projectContainers.containers, ...projectComponents.components],\r\n  entryComponents: [...projectComponents.components]\r\n})\r\nexport class ProjectModule {}\r\n","/** @format */\r\n\r\nimport { StatusPipe } from './pipe/status.pipe';\r\nimport { ProjectService } from './project-service/project.service';\r\nimport { TaskService } from './task-service/task.service';\r\n\r\nexport const pipes = [StatusPipe];\r\n\r\nexport const services = [ProjectService, TaskService];\r\n\r\nexport * from './pipe/status.pipe';\r\nexport * from './project-service/project.service';\r\nexport * from './task-service/task.service';\r\n// export * from './task.resolve';\r\n","/** @format */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '../../models/task.models';\n\n@Pipe({\n  name: 'Status'\n})\nexport class StatusPipe implements PipeTransform {\n  transform(value: any, ...args: any[]): any {\n    const result = Status[value as Status];\n    return result;\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { AuthService } from 'src/modules/auth/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  baseUrl = environment.apiUrl + 'project';\n\n  constructor(private http: HttpClient, private auth: AuthService) {}\n\n  removeProject$(id: number) {\n    return this.http.delete(`${this.baseUrl}/${this.auth.UserId}/remove/${id}`, {\n      responseType: 'json'\n    });\n  }\n\n  updateProject$(id: number, name: string) {\n    return this.http.put(\n      `${this.baseUrl}/${this.auth.UserId}/update`,\n      { id, name },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  createProject$(name: string) {\n    return this.http.post(\n      `${this.baseUrl}/${this.auth.UserId}/create`,\n      { name },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  baseUrl = environment.apiUrl + 'task';\n\n  userId: any;\n\n  constructor(private http: HttpClient) {\n    this.userId = new JwtHelperService().decodeToken(localStorage.getItem('token')).nameid;\n  }\n\n  createTask$(projectId, name, deadline, priority) {\n    return this.http.post(\n      `${this.baseUrl}/${this.userId}/create/${projectId}`,\n      { name, deadline, priority },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateTask$(id, name, deadline) {\n    return this.http.put(\n      `${this.baseUrl}/${this.userId}/update`,\n      { id, name, deadline },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateStatus$(id, status) {\n    return this.http.put(\n      `${this.baseUrl}/${this.userId}/updateStatus`,\n      { id, status },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updatePrioraty$(tasks) {\n    return this.http.put(\n      `${this.baseUrl}/${this.userId}/updatePrioraty`,\n      { tasks },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  removeTask$(id) {\n    return this.http.delete(`${this.baseUrl}/${this.userId}/remove/${id}`, {\n      responseType: 'json'\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}