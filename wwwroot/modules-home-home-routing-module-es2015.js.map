{"version":3,"sources":["./src/modules/home/containers/home/home.component.html","./src/modules/project/components/create-project-dialog/createProjecrDialog.component.html","./src/modules/project/components/create-task-dialog/createTaskDialog.component.html","./src/modules/project/components/update-project-dialog/updateProjectDialog.component.html","./src/modules/project/components/update-task-dialog/updateTaskDialog.component.html","./src/modules/project/containers/project/project.component.html","./src/modules/home/components/index.ts","./src/modules/home/containers/home/home.component.css","./src/modules/home/containers/home/home.component.ts","./src/modules/home/containers/index.ts","./src/modules/home/guards/home.guard.ts","./src/modules/home/guards/index.ts","./src/modules/home/home-routing.module.ts","./src/modules/home/home.module.ts","./src/modules/home/services/data.resolve.ts","./src/modules/home/services/data.service.ts","./src/modules/home/services/index.ts","./src/modules/project/components/create-project-dialog/createProjecrDialog.component.css","./src/modules/project/components/create-project-dialog/createProjectDialog.component.ts","./src/modules/project/components/create-task-dialog/createTaskDialog.component.css","./src/modules/project/components/create-task-dialog/createTaskDialog.component.ts","./src/modules/project/components/index.ts","./src/modules/project/components/update-project-dialog/updateProjectDialog.component.css","./src/modules/project/components/update-project-dialog/updateProjectDialog.component.ts","./src/modules/project/components/update-task-dialog/updateTaskDialog.component.css","./src/modules/project/components/update-task-dialog/updateTaskDialog.component.ts","./src/modules/project/containers/index.ts","./src/modules/project/containers/project/project.component.css","./src/modules/project/containers/project/project.component.ts","./src/modules/project/guards/index.ts","./src/modules/project/guards/project.guard.ts","./src/modules/project/models/task.models.ts","./src/modules/project/project.module.ts","./src/modules/project/services/index.ts","./src/modules/project/services/pipe/status.pipe.ts","./src/modules/project/services/project-service/project.service.ts","./src/modules/project/services/task-service/task.service.ts"],"names":[],"mappings":"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","file":"modules-home-home-routing-module-es2015.js","sourcesContent":["export default \"<div>\\n  <ngx-loading\\n    [show]=\\\"!this.userData\\\"\\n    [config]=\\\"{ fullScreenBackdrop: true }\\\"\\n  ></ngx-loading>\\n  <button\\n    *ngIf=\\\"this.userData\\\"\\n    id=\\\"exit\\\"\\n    (click)=\\\"_auth.logOut()\\\"\\n    mat-icon-button\\n    color=\\\"warn\\\"\\n  >\\n    <mat-icon>exit_to_app</mat-icon>\\n  </button>\\n\\n  <app-project *ngFor=\\\"let item of this.userData\\\" [data]=\\\"item\\\"></app-project>\\n\\n  <button\\n    *ngIf=\\\"this.userData\\\"\\n    id=\\\"add\\\"\\n    (click)=\\\"createProjectDialog()\\\"\\n    mat-fab\\n    color=\\\"primary\\\"\\n  >\\n    <mat-icon>add</mat-icon>\\n  </button>\\n  <div id=\\\"loader\\\">\\n    <ngx-loading [show]=\\\"loaded | async\\\" [config]=\\\"config\\\"></ngx-loading>\\n  </div>\\n</div>\\n\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Create project</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter project name\\\" />\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Create task</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter task\\\" />\\n    </mat-form-field>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput type=\\\"number\\\" formControlName=\\\"priority\\\" placeholder=\\\"Enter priority\\\" />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Choose a date</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"deadline\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Create</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Update project</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter project\\\" />\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Update</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<form [formGroup]=\\\"form\\\" (ngSubmit)=\\\"submit(form)\\\">\\n  <h1 mat-dialog-title>Update task</h1>\\n  <mat-dialog-content>\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <input matInput formControlName=\\\"task\\\" placeholder=\\\"Enter task\\\" />\\n    </mat-form-field>\\n\\n\\n    <mat-form-field appearance=\\\"fill\\\">\\n      <mat-label>Choose a date</mat-label>\\n      <input matInput [matDatepicker]=\\\"picker\\\" formControlName=\\\"deadline\\\">\\n      <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n      <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n  </mat-dialog-content>\\n\\n  <mat-dialog-actions>\\n    <button [disabled]=\\\"!form.valid\\\" mat-button type=\\\"submit\\\">Update</button>\\n    <button mat-button type=\\\"button\\\" (click)=\\\"dialogRef.close()\\\">Cancel</button>\\n  </mat-dialog-actions>\\n\\n</form>\";","export default \"<div *ngIf=\\\"!isDeleted\\\" class=\\\"container\\\">\\n  <div class=\\\"row justify-content-center\\\">\\n    <div class=\\\"card-size card mb-3\\\">\\n      <div class=\\\"card-header\\\">\\n        {{ projectName }}\\n\\n        <button (click)=\\\"removeProject()\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon color=\\\"warn\\\">delete_outline</mat-icon>\\n        </button>\\n\\n        <button (click)=\\\"updateProjectDialog()\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon>create</mat-icon>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"card-header\\\">\\n        <button (click)=\\\"createTaskDialog()\\\" mat-icon-button color=\\\"primary\\\">\\n          <mat-icon>add_box</mat-icon>\\n        </button>\\n      </div>\\n\\n      <div class=\\\"card-body\\\">\\n        <div class=\\\"no-data\\\" *ngIf=\\\"!dataSource?.data?.length\\\"></div>\\n\\n        <table\\n          *ngIf=\\\"dataSource?.data?.length\\\"\\n          mat-table\\n          [dataSource]=\\\"dataSource\\\"\\n          matSort\\n          class=\\\"mat-elevation-z8\\\"\\n          cdkDropList\\n          [cdkDropListData]=\\\"dataSource\\\"\\n          (cdkDropListDropped)=\\\"dropTable($event)\\\"\\n        >\\n          <ng-container matColumnDef=\\\"state\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-header></th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              <button\\n                [disabled]=\\\"element.status == 0 ? true : false\\\"\\n                (click)=\\\"setDone(element)\\\"\\n                mat-icon-button\\n                color=\\\"primary\\\"\\n              >\\n                <mat-icon>check_circle_outline</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"priority\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Pr.</th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              cdkDragHandle\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              {{ element.priority }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Name</th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              class=\\\"draw-border\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              {{ element.name }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"deadline\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Deadline</th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              <u> {{ element.deadline | date: 'dd:MM:yyyy' }}</u>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"status\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Status</th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              {{ element.status | Status }}\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"update\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-header></th>\\n            <th mat-header-cell *matHeaderCellDef></th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              <button\\n                color=\\\"accent\\\"\\n                [disabled]=\\\"element.status == 0 ? true : false\\\"\\n                (click)=\\\"updateTaskDialog(element)\\\"\\n                mat-icon-button\\n                color=\\\"primary\\\"\\n              >\\n                <mat-icon>ballot</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <ng-container matColumnDef=\\\"remove\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-header></th>\\n            <th mat-header-cell *matHeaderCellDef></th>\\n            <td\\n              [ngClass]=\\\"{\\n                done: element.status == 0 ? true : false,\\n                expired: element.status == 1 ? true : false\\n              }\\\"\\n              mat-cell\\n              *matCellDef=\\\"let element\\\"\\n            >\\n              <button\\n                (click)=\\\"removeTask(element.id)\\\"\\n                color=\\\"accent\\\"\\n                [disabled]=\\\"element.status == 0 ? false : false\\\"\\n                (click)=\\\"(null)\\\"\\n                mat-icon-button\\n                color=\\\"primary\\\"\\n              >\\n                <mat-icon color=\\\"warn\\\">delete_outline</mat-icon>\\n              </button>\\n            </td>\\n          </ng-container>\\n\\n          <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n          <tr\\n            mat-row\\n            *matRowDef=\\\"let row; columns: displayedColumns\\\"\\n            cdkDrag\\n            [cdkDragData]=\\\"row\\\"\\n          ></tr>\\n        </table>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\";","/** @format */\n\nexport const components = [];\n","export default \"/** @format */\\n\\n#exit {\\n  float: right;\\n\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 1rem;\\n  right: 1rem;\\n}\\n\\n#add {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 50px;\\n\\n  position: -webkit-sticky;\\n  position: sticky;\\n  bottom: 1rem;\\n  align-self: flex-end;\\n}\\n\\n#loader {\\n  position: fixed;\\n  bottom: 5%;\\n  right: 5%;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL2hvbWUvY29udGFpbmVycy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhOztBQUViO0VBQ0UsWUFBWTs7RUFFWix3QkFBd0I7RUFDeEIsZ0JBQWdCO0VBQ2hCLFNBQVM7RUFDVCxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7O0VBRWhCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQTtFQUNFLGVBQWU7RUFDZixVQUFVO0VBQ1YsU0FBUztBQUNYIiwiZmlsZSI6InNyYy9tb2R1bGVzL2hvbWUvY29udGFpbmVycy9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAZm9ybWF0ICovXG5cbiNleGl0IHtcbiAgZmxvYXQ6IHJpZ2h0O1xuXG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgdG9wOiAxcmVtO1xuICByaWdodDogMXJlbTtcbn1cblxuI2FkZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuXG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgYm90dG9tOiAxcmVtO1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cblxuI2xvYWRlciB7XG4gIHBvc2l0aW9uOiBmaXhlZDtcbiAgYm90dG9tOiA1JTtcbiAgcmlnaHQ6IDUlO1xufVxuIl19 */\";","/** @format */\n\nimport { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/modules/auth/services';\nimport { DataService } from '../../services';\n\nimport {\n  NgxLoadingModule,\n  ngxLoadingAnimationTypes,\n  INgxLoadingConfig\n} from 'ngx-loading';\n\nimport { Project } from 'src/modules/project/models';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { CreateProjectDialogComponent } from '../../../project/components/create-project-dialog/createProjectDialog.component';\nimport { ProjectForCreate } from 'src/modules/project/models/task.models';\nimport { ProjectService } from 'src/modules/project/services';\nimport { LoaderService } from 'src/app/shared/services/loader.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  userData: Project[];\n  fetched = false;\n\n  createProjectDialogRef: MatDialogRef<\n    CreateProjectDialogComponent,\n    ProjectForCreate\n  >;\n\n  loaded = this._loaderServ.isLoading;\n\n  config: INgxLoadingConfig = {\n    animationType: ngxLoadingAnimationTypes.doubleBounce,\n    backdropBackgroundColour: 'rgba(0, 255, 0, 0)',\n    backdropBorderRadius: '8px',\n    primaryColour: '#1ea',\n    secondaryColour: '#f11',\n    tertiaryColour: '#1ee'\n  };\n\n  constructor(\n    public _auth: AuthService,\n    private _dataService: DataService,\n    private _dialog: MatDialog,\n    private _projectService: ProjectService,\n    private _loaderServ: LoaderService\n  ) {}\n\n  ngOnInit() {\n    this._dataService.getData$(this._auth.UserId).subscribe(res => {\n      this.userData = res as Project[];\n    });\n  }\n\n  createProjectDialog() {\n    this.createProjectDialogRef = this._dialog.open(\n      CreateProjectDialogComponent,\n      {\n        data: { task: '' }\n      }\n    );\n\n    this.createProjectDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this._projectService.createProject$(result.task).subscribe(\n          () => {\n            this._dataService.getData$(this._auth.UserId).subscribe(res => {\n              this.userData = res as Project[];\n            });\n          },\n          error => alert(error.message)\n        );\n      }\n    });\n  }\n}\n","import { HomeComponent } from './home/home.component';\n\nexport const containers = [HomeComponent];\n\nexport * from './home/home.component';\n","import { Injectable } from '@angular/core';\nimport {\n  CanActivate,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot,\n  UrlTree\n} from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HomeGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n}\n","import { HomeGuard } from './home.guard';\n\nexport const guards = [HomeGuard];\n\nexport * from './home.guard';\n","/** @format */\n\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { HomeModule } from './home.module';\n\nimport * as homeContainers from './containers';\n\nimport * as homeGuards from './guards';\n\nimport { DataResolve } from './services/data.resolve';\nimport { TaskResolve } from '../project/services/task-service/task.resolve';\n\nexport const ROUTES: Routes = [\n  {\n    path: 'home',\n    canActivate: [],\n    component: homeContainers.HomeComponent\n    // resolve: {\n    //   dataResolver: DataResolve\n    // }\n  }\n];\n\n@NgModule({\n  imports: [HomeModule, RouterModule.forChild(ROUTES)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule {}\n","/** @format */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport * as authComponents from './components';\n\nimport * as authContainers from './containers';\n\nimport * as authGuards from './guards';\n\nimport * as authServices from './services';\nimport { ProjectModule } from '../project/project.module';\nimport { MaterialModule } from 'src/app/app.module';\nimport { NgxLoadingModule } from 'ngx-loading';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    ProjectModule,\n    MaterialModule,\n    NgxLoadingModule\n  ],\n  providers: [...authServices.services, ...authGuards.guards],\n  declarations: [...authContainers.containers, ...authComponents.components],\n  exports: [...authContainers.containers, ...authComponents.components]\n})\nexport class HomeModule {}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport {\n  Resolve,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n} from '@angular/router';\nimport { DataService } from '.';\nimport { Observable } from 'rxjs/internal/Observable';\nimport { AuthService } from 'src/modules/auth/services';\n\n@Injectable()\nexport class DataResolve implements Resolve<any> {\n  constructor(private _dataService: DataService, private _auth: AuthService) {}\n\n  resolve(route: ActivatedRouteSnapshot): Observable<any> {\n    return this._dataService.getData$(this._auth.UserId);\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/modules/auth/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  baseUrl = environment.apiUrl + 'data';\n  userId: number;\n\n  constructor(private _http: HttpClient, private _auth: AuthService) {\n    this.userId = _auth.UserId;\n  }\n\n  getData$(id: number = this.userId) {\n    return this._http.get(`${this.baseUrl}/${id}/getData`, {\n      responseType: 'json'\n    });\n  }\n}\n","/** @format */\n\nimport { DataService } from './data.service';\nimport { DataResolve } from './data.resolve';\n\nexport const services = [DataService, DataResolve];\n\nexport * from './data.service';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvY3JlYXRlLXByb2plY3QtZGlhbG9nL2NyZWF0ZVByb2plY3JEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormBuilder, Validators, FormGroup } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-createProjecrDialog',\n  templateUrl: './createProjecrDialog.component.html',\n  styleUrls: ['./createProjecrDialog.component.css']\n})\nexport class CreateProjectDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<CreateProjectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvY3JlYXRlLXRhc2stZGlhbG9nL2NyZWF0ZVRhc2tEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-createTaskDialog',\n  templateUrl: './createTaskDialog.component.html',\n  styleUrls: ['./createTaskDialog.component.css']\n})\nexport class CreateTaskDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<CreateTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: ['', Validators.required],\n      deadline: ['', Validators.required],\n      priority: ['', Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","/** @format */\n\nimport { UpdateTaskDialogComponent } from './update-task-dialog/updateTaskDialog.component';\nimport { CreateTaskDialogComponent } from './create-task-dialog/createTaskDialog.component';\nimport { UpdateProjectDialogComponent } from './update-project-dialog/updateProjectDialog.component';\nimport { CreateProjectDialogComponent } from './create-project-dialog/createProjectDialog.component';\n\nexport const components = [\n  UpdateTaskDialogComponent,\n  UpdateProjectDialogComponent,\n  CreateTaskDialogComponent,\n  CreateProjectDialogComponent\n];\n\nexport * from './update-task-dialog/updateTaskDialog.component';\nexport * from './create-task-dialog/createTaskDialog.component';\nexport * from './update-project-dialog/updateProjectDialog.component';\nexport * from './create-project-dialog/createProjectDialog.component';\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvdXBkYXRlLXByb2plY3QtZGlhbG9nL3VwZGF0ZVByb2plY3REaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-updateProjectDialog',\n  templateUrl: './updateProjectDialog.component.html',\n  styleUrls: ['./updateProjectDialog.component.css']\n})\nexport class UpdateProjectDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateProjectDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: [this.data.task, Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvbW9kdWxlcy9wcm9qZWN0L2NvbXBvbmVudHMvdXBkYXRlLXRhc2stZGlhbG9nL3VwZGF0ZVRhc2tEaWFsb2cuY29tcG9uZW50LmNzcyJ9 */\";","/** @format */\n\nimport { Component, OnInit, Inject } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { TaskForUpdate } from '../../models/task.models';\n\n@Component({\n  selector: 'app-updateTaskDialog',\n  templateUrl: './updateTaskDialog.component.html',\n  styleUrls: ['./updateTaskDialog.component.css']\n})\nexport class UpdateTaskDialogComponent implements OnInit {\n  form: FormGroup;\n\n  constructor(\n    public formBuilder: FormBuilder,\n    public dialogRef: MatDialogRef<UpdateTaskDialogComponent>,\n    @Inject(MAT_DIALOG_DATA) public data\n  ) {}\n\n  ngOnInit() {\n    this.form = this.formBuilder.group({\n      task: [this.data.task, Validators.required],\n      deadline: [this.data.deadline, Validators.required]\n    });\n  }\n\n  submit(form) {\n    this.dialogRef.close(form.value);\n  }\n}\n","import { ProjectComponent } from './project/project.component';\n\nexport const containers = [ProjectComponent];\n\nexport * from './project/project.component';\n","export default \"/** @format */\\n\\n.container {\\n  align-items: flex-start;\\n}\\n\\n.no-data {\\n  background: url('no-data.jpeg') no-repeat center center;\\n  height: 500px;\\n  width: auto;\\n}\\n\\ncard-container {\\n  position: relative;\\n}\\n\\n.card-header button {\\n  float: right;\\n}\\n\\n#add {\\n  display: block;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 50px;\\n\\n  position: -webkit-sticky;\\n  position: sticky;\\n  bottom: 1rem;\\n  align-self: flex-end;\\n}\\n\\n/*  */\\n\\n.done {\\n  background: -webkit-linear-gradient(top, rgb(255, 255, 255) 1%, rgb(183, 230, 193) 99%);\\n}\\n\\n.expired {\\n  background: -webkit-linear-gradient(top, rgb(255, 255, 255) 1%, rgb(253, 0, 0) 99%);\\n}\\n\\ntable {\\n  width: 100%;\\n}\\n\\n.card-size {\\n  width: 100%;\\n  margin-top: 50px;\\n}\\n\\ntd.mat-cell {\\n  padding: 20px 0;\\n  border: none;\\n}\\n\\n.mat-column-name {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 60% !important;\\n  width: 60% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n\\n  word-break: break-word;\\n\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\n.mat-column-position {\\n  word-wrap: break-word !important;\\n  white-space: unset !important;\\n  flex: 0 0 7% !important;\\n  width: 7% !important;\\n  overflow-wrap: break-word;\\n  word-wrap: break-word;\\n\\n  word-break: break-word;\\n\\n  -ms-hyphens: auto;\\n  -webkit-hyphens: auto;\\n  hyphens: auto;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9tb2R1bGVzL3Byb2plY3QvY29udGFpbmVycy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxhQUFhOztBQUViO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsdURBQXdFO0VBQ3hFLGFBQWE7RUFDYixXQUFXO0FBQ2I7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQixnQkFBZ0I7O0VBRWhCLHdCQUF3QjtFQUN4QixnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLG9CQUFvQjtBQUN0Qjs7QUFFQSxLQUFLOztBQUVMO0VBQ0UsdUZBQXVGO0FBQ3pGOztBQUVBO0VBQ0UsbUZBQW1GO0FBQ3JGOztBQUVBO0VBQ0UsV0FBVztBQUNiOztBQUVBO0VBQ0UsV0FBVztFQUNYLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGVBQWU7RUFDZixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxnQ0FBZ0M7RUFDaEMsNkJBQTZCO0VBQzdCLHdCQUF3QjtFQUN4QixxQkFBcUI7RUFDckIseUJBQXlCO0VBQ3pCLHFCQUFxQjs7RUFFckIsc0JBQXNCOztFQUV0QixpQkFBaUI7RUFFakIscUJBQXFCO0VBQ3JCLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGdDQUFnQztFQUNoQyw2QkFBNkI7RUFDN0IsdUJBQXVCO0VBQ3ZCLG9CQUFvQjtFQUNwQix5QkFBeUI7RUFDekIscUJBQXFCOztFQUVyQixzQkFBc0I7O0VBRXRCLGlCQUFpQjtFQUVqQixxQkFBcUI7RUFDckIsYUFBYTtBQUNmIiwiZmlsZSI6InNyYy9tb2R1bGVzL3Byb2plY3QvY29udGFpbmVycy9wcm9qZWN0L3Byb2plY3QuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qKiBAZm9ybWF0ICovXG5cbi5jb250YWluZXIge1xuICBhbGlnbi1pdGVtczogZmxleC1zdGFydDtcbn1cblxuLm5vLWRhdGEge1xuICBiYWNrZ3JvdW5kOiB1cmwoLi4vLi4vLi4vLi4vYXNzZXRzL25vLWRhdGEuanBlZykgbm8tcmVwZWF0IGNlbnRlciBjZW50ZXI7XG4gIGhlaWdodDogNTAwcHg7XG4gIHdpZHRoOiBhdXRvO1xufVxuXG5jYXJkLWNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbn1cblxuLmNhcmQtaGVhZGVyIGJ1dHRvbiB7XG4gIGZsb2F0OiByaWdodDtcbn1cblxuI2FkZCB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBtYXJnaW4tbGVmdDogYXV0bztcbiAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICBtYXJnaW4tdG9wOiA1MHB4O1xuXG4gIHBvc2l0aW9uOiAtd2Via2l0LXN0aWNreTtcbiAgcG9zaXRpb246IHN0aWNreTtcbiAgYm90dG9tOiAxcmVtO1xuICBhbGlnbi1zZWxmOiBmbGV4LWVuZDtcbn1cblxuLyogICovXG5cbi5kb25lIHtcbiAgYmFja2dyb3VuZDogLXdlYmtpdC1saW5lYXItZ3JhZGllbnQodG9wLCByZ2IoMjU1LCAyNTUsIDI1NSkgMSUsIHJnYigxODMsIDIzMCwgMTkzKSA5OSUpO1xufVxuXG4uZXhwaXJlZCB7XG4gIGJhY2tncm91bmQ6IC13ZWJraXQtbGluZWFyLWdyYWRpZW50KHRvcCwgcmdiKDI1NSwgMjU1LCAyNTUpIDElLCByZ2IoMjUzLCAwLCAwKSA5OSUpO1xufVxuXG50YWJsZSB7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG4uY2FyZC1zaXplIHtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbi10b3A6IDUwcHg7XG59XG5cbnRkLm1hdC1jZWxsIHtcbiAgcGFkZGluZzogMjBweCAwO1xuICBib3JkZXI6IG5vbmU7XG59XG5cbi5tYXQtY29sdW1uLW5hbWUge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQgIWltcG9ydGFudDtcbiAgd2hpdGUtc3BhY2U6IHVuc2V0ICFpbXBvcnRhbnQ7XG4gIGZsZXg6IDAgMCA2MCUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDYwJSAhaW1wb3J0YW50O1xuICBvdmVyZmxvdy13cmFwOiBicmVhay13b3JkO1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG5cbiAgd29yZC1icmVhazogYnJlYWstd29yZDtcblxuICAtbXMtaHlwaGVuczogYXV0bztcbiAgLW1vei1oeXBoZW5zOiBhdXRvO1xuICAtd2Via2l0LWh5cGhlbnM6IGF1dG87XG4gIGh5cGhlbnM6IGF1dG87XG59XG5cbi5tYXQtY29sdW1uLXBvc2l0aW9uIHtcbiAgd29yZC13cmFwOiBicmVhay13b3JkICFpbXBvcnRhbnQ7XG4gIHdoaXRlLXNwYWNlOiB1bnNldCAhaW1wb3J0YW50O1xuICBmbGV4OiAwIDAgNyUgIWltcG9ydGFudDtcbiAgd2lkdGg6IDclICFpbXBvcnRhbnQ7XG4gIG92ZXJmbG93LXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHdvcmQtd3JhcDogYnJlYWstd29yZDtcblxuICB3b3JkLWJyZWFrOiBicmVhay13b3JkO1xuXG4gIC1tcy1oeXBoZW5zOiBhdXRvO1xuICAtbW96LWh5cGhlbnM6IGF1dG87XG4gIC13ZWJraXQtaHlwaGVuczogYXV0bztcbiAgaHlwaGVuczogYXV0bztcbn1cbiJdfQ== */\";","/** @format */\n\nimport {\n  Component,\n  OnInit,\n  ViewChild,\n  Input,\n  ChangeDetectorRef,\n  DoCheck,\n  OnChanges\n} from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialogRef, MatDialog } from '@angular/material/dialog';\nimport { UpdateTaskDialogComponent } from '../../components/update-task-dialog/updateTaskDialog.component';\nimport {\n  TaskForUpdate,\n  Status,\n  Task,\n  TaskForCreate,\n  ProjectForUpdate\n} from '../../models/task.models';\nimport { CdkDragDrop, moveItemInArray } from '@angular/cdk/drag-drop';\nimport { Project } from '../../models';\nimport { TaskService, ProjectService } from '../../services';\nimport { DataService } from 'src/modules/home/services';\nimport {\n  CreateTaskDialogComponent,\n  UpdateProjectDialogComponent\n} from '../../components';\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css']\n})\nexport class ProjectComponent implements OnInit, DoCheck {\n  //#region prop\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\n\n  @ViewChild(MatSort) set matSort(ms: MatSort) {\n    this.sort = ms;\n    this.dataSource.sort = this.sort;\n  }\n\n  @Input() data: Project;\n\n  displayedColumns: string[] = [\n    'state',\n    'priority',\n    'name',\n    'deadline',\n    'status',\n    'update',\n    'remove'\n  ];\n  dataSource: MatTableDataSource<Task>;\n\n  updateTaskDialogRef: MatDialogRef<UpdateTaskDialogComponent, TaskForUpdate>;\n  createTaskDialogRef: MatDialogRef<CreateTaskDialogComponent, TaskForCreate>;\n  updateProjectDialogRef: MatDialogRef<\n    UpdateProjectDialogComponent,\n    ProjectForUpdate\n  >;\n\n  projectId: number;\n  projectName: string;\n\n  isDeleted: boolean;\n  isFetched: boolean;\n  //#endregion\n\n  constructor(\n    private _dialog: MatDialog,\n    private _taskService: TaskService,\n    private _projectService: ProjectService\n  ) {}\n\n  ngDoCheck(): void {\n    this.dataSource.data.forEach(x => {\n      if (\n        Status.Onway === x.status &&\n        new Date(x.deadline).getTime() < new Date().getTime()\n      ) {\n        x.status = Status.Expired;\n      } else if (\n        Status.Expired === x.status &&\n        new Date(x.deadline).getTime() > new Date().getTime()\n      ) {\n        x.status = Status.Onway;\n      }\n    });\n  }\n\n  ngOnInit() {\n    this._setStatus(this.data.tasks);\n\n    this.dataSource = new MatTableDataSource(this.data.tasks);\n\n    this.projectId = this.data.projectId;\n    this.projectName = this.data.projectName;\n  }\n\n  private _setStatus(tasks: Task[]): void {\n    tasks.forEach(checkingTask => {\n      if (\n        new Date(checkingTask.deadline).getTime() < new Date().getTime() &&\n        checkingTask.status === Status.Onway\n      ) {\n        this._taskService\n          .updateStatus$(checkingTask.id, Status.Expired)\n          .subscribe(\n            () => {},\n            error => console.error(error.message)\n          );\n\n        checkingTask.status = Status.Expired;\n      } else if (\n        new Date(checkingTask.deadline).getTime() > new Date().getTime() &&\n        checkingTask.status === Status.Expired\n      ) {\n        this._taskService\n          .updateStatus$(checkingTask.id, Status.Onway)\n          .subscribe(\n            () => {},\n            error => console.error(error.message)\n          );\n      }\n    });\n  }\n\n  updateTaskDialog(transfer: Task) {\n    this.updateTaskDialogRef = this._dialog.open(UpdateTaskDialogComponent, {\n      data: {\n        task: transfer.name,\n        deadline: transfer.deadline\n      }\n    });\n\n    this.updateTaskDialogRef.afterClosed().subscribe(result => {\n      if (transfer) {\n        this._taskService\n          .updateTask$(transfer.id, result.task, result.deadline)\n          .subscribe(\n            task => {\n              this._updateTask(task as Task);\n            },\n            error => console.error(error.message)\n          );\n      }\n    });\n  }\n\n  private _updateTask(task: Task) {\n    this.dataSource.data = this.dataSource.data.map(x =>\n      x.id === task.id ? task : x\n    );\n  }\n\n  updateProjectDialog() {\n    this.updateProjectDialogRef = this._dialog.open(\n      UpdateProjectDialogComponent,\n      {\n        data: { task: this.projectName }\n      }\n    );\n\n    this.updateProjectDialogRef.afterClosed().subscribe(result => {\n      this._projectService\n        .updateProject$(this.projectId, result.task)\n        .subscribe(\n          () => {\n            this.projectName = result.task;\n          },\n          error => console.error(error.message)\n        );\n    });\n  }\n\n  createTaskDialog() {\n    this.createTaskDialogRef = this._dialog.open(CreateTaskDialogComponent, {\n      data: { task: '', deadline: '', priority: '' }\n    });\n\n    this.createTaskDialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this._taskService\n          .createTask$(\n            this.projectId,\n            result.task,\n            result.deadline,\n            result.priority\n          )\n          .subscribe(\n            task => {\n              this._addTaskToTable(task as Task);\n            },\n            error => console.error(error.message)\n          );\n      }\n    });\n  }\n\n  private _addTaskToTable(task: Task) {\n    const tmpTask = [...this.dataSource.data];\n    tmpTask.push(task);\n\n    this.dataSource.data = tmpTask;\n  }\n\n  dropTable(event: CdkDragDrop<Task[]>) {\n    const prevIndex = this.dataSource.data.findIndex(\n      d => d === event.item.data\n    );\n\n    moveItemInArray(this.dataSource.data, prevIndex, event.currentIndex);\n\n    for (let index = 0; index < this.dataSource.filteredData.length; index++)\n      this.dataSource.data[index].priority = index;\n\n    this.dataSource.data = this.dataSource.data;\n\n    this._taskService.updatePrioraty$(this.dataSource.data).subscribe(\n      () => {},\n      error => console.error(error.message)\n    );\n  }\n\n  setDone(element: Task) {\n    this._taskService.updateStatus$(element.id, Status.Done).subscribe(\n      () => {},\n      error => console.error(error.message)\n    );\n\n    element.status = Status.Done;\n  }\n\n  removeTask(id: number) {\n    this.dataSource.data = this.dataSource.data.filter(x => x.id !== id);\n\n    this._taskService.removeTask$(id).subscribe(\n      () => {},\n      error => console.error(error.message)\n    );\n  }\n\n  removeProject() {\n    this.isDeleted = true;\n\n    this._projectService.removeProject$(this.projectId).subscribe(\n      () => {},\n      error => console.error(error.message)\n    );\n  }\n}\n","import { ProjectGuard } from './project.guard';\n\nexport const guards = [ProjectGuard];\n\nexport * from './project.guard';\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectGuard implements CanActivate {\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  \n}\n","/** @format */\n\nexport type Task = {\n  id: number;\n  name: string;\n  deadline: string | Date;\n  status: Status;\n  priority: number;\n};\n\nexport type ProjectForCreate = {\n  task: string;\n};\n\nexport type ProjectForUpdate = {\n  task: string;\n};\n\nexport type TaskForCreate = {\n  task: string;\n  deadline: Date;\n  priority: number;\n};\n\nexport type TaskForUpdate = {\n  task: string;\n  deadline: Date;\n};\n\nexport enum Status {\n  Done,\n  Expired,\n  Onway\n}\n","/**\n * /* tslint:disable: ordered-imports\n *\n * @format\n */\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport * as projectComponents from './components';\n\nimport * as projectContainers from './containers';\n\nimport * as projectGuards from './guards';\n\nimport * as projectServices from './services';\n\nimport { MaterialModule } from 'src/app/app.module';\nimport { NgxLoadingComponent, NgxLoadingModule } from 'ngx-loading';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FormsModule,\n    MaterialModule,\n    NgxLoadingModule\n  ],\n  providers: [\n    ...projectServices.pipes,\n    ...projectServices.services,\n    ...projectGuards.guards\n  ],\n  declarations: [\n    ...projectContainers.containers,\n    ...projectComponents.components,\n    ...projectServices.pipes\n  ],\n  exports: [...projectContainers.containers, ...projectComponents.components],\n  entryComponents: [...projectComponents.components]\n})\nexport class ProjectModule {}\n","/** @format */\n\nimport { StatusPipe } from './pipe/status.pipe';\nimport { ProjectService } from './project-service/project.service';\nimport { TaskService } from './task-service/task.service';\n\nexport const pipes = [StatusPipe];\n\nexport const services = [ProjectService, TaskService];\n\nexport * from './pipe/status.pipe';\nexport * from './project-service/project.service';\nexport * from './task-service/task.service';\n// export * from './task.resolve';\n","/** @format */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Status } from '../../models/task.models';\n\n@Pipe({\n  name: 'Status'\n})\nexport class StatusPipe implements PipeTransform {\n  transform(value: any, ...args: any[]): any {\n    const result = Status[value as Status];\n    return result;\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { AuthService } from 'src/modules/auth/services';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProjectService {\n  baseUrl = environment.apiUrl + 'project';\n\n  constructor(private _http: HttpClient, private _auth: AuthService) {}\n\n  removeProject$(id: number) {\n    return this._http.delete(\n      `${this.baseUrl}/${this._auth.UserId}/remove/${id}`,\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateProject$(id: number, name: string) {\n    return this._http.put(\n      `${this.baseUrl}/${this._auth.UserId}/update`,\n      { id, name },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  createProject$(name: string) {\n    return this._http.post(\n      `${this.baseUrl}/${this._auth.UserId}/create`,\n      { name },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n}\n","/** @format */\n\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient } from '@angular/common/http';\nimport { JwtHelperService } from '@auth0/angular-jwt';\nimport { map } from 'rxjs/operators';\nimport { Task, Status } from '../../models/task.models';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TaskService {\n  baseUrl = environment.apiUrl + 'task';\n\n  userId: any;\n\n  constructor(private _http: HttpClient) {\n    this.userId = new JwtHelperService().decodeToken(\n      localStorage.getItem('token')\n    ).nameid;\n  }\n\n  getTask$(id: number) {\n    return this._http.get(`${this.baseUrl}/${this.userId}/get/${id}`, {\n      responseType: 'json'\n    });\n  }\n\n  createTask$(\n    projectId: number,\n    name: string,\n    deadline: Date,\n    priority: number\n  ) {\n    return this._http.post(\n      `${this.baseUrl}/${this.userId}/create/${projectId}`,\n      { name, deadline, priority },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateTask$(id: number, name: string, deadline: Date) {\n    return this._http.put(\n      `${this.baseUrl}/${this.userId}/update`,\n      { id, name, deadline },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updateStatus$(id: number, status: Status) {\n    return this._http.put(\n      `${this.baseUrl}/${this.userId}/updateStatus`,\n      { id, status },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  updatePrioraty$(tasks: Task[]) {\n    return this._http.put(\n      `${this.baseUrl}/${this.userId}/updatePrioraty`,\n      { tasks },\n      {\n        responseType: 'json'\n      }\n    );\n  }\n\n  removeTask$(id) {\n    return this._http.delete(`${this.baseUrl}/${this.userId}/remove/${id}`, {\n      responseType: 'json'\n    });\n  }\n}\n"],"sourceRoot":"webpack:///"}